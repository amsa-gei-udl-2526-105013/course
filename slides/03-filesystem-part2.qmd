---
title: "Sistema de fitxers (II)"
subtitle: "Unitat 3 ¬∑ Administraci√≥ i Manteniment de Sistemes i Aplicacions (AMSA)"
author: "Jordi Mateo Forn√©s"
logo: "/figs/corporative/institute.png"
format: 
  revealjs:
    transition: fade
    slide-number: true
    incremental: true 
    chalkboard: false
    css: styles.css
    footer: "Unitat 3 ¬∑ Administraci√≥ i Manteniment de Sistemes i Aplicacions (AMSA) [üè†](/index.html)</a>"
editor: visual

execute:
  freeze: auto
  echo: false
---

# Introducci√≥ als RAIDs

## Qu√® √©s un RAID? 

Un **RAID** (*Redundant Array of Independent (originalment Inexpensive) Disks*) √©s un conjunt de dispositius d'emmagatzematge que es combinen per a formar un sistema d'emmagatzematge √∫nic. Aquest nou sistema d'emmagatzematge permet distribuir les dades entre els diferents dispositius que el formen i millorar-ne m√®triques com la **redund√†ncia** o el **rendiment**.




::: notes
- Els RAIDs s√≥n un conjunt de dispositius d'emmagatzematge que es combinen per a formar un sistema d'emmagatzematge √∫nic.
- El principal objectiu d'aquesta combinaci√≥ √©s tolerar les fallades que es poden produir en els dispositius d'emmagatzematge. Aquesta redund√†ncia es pot aconseguir mitjan√ßant la **duplicaci√≥** de les dades o mitjan√ßant la **paritat**, com veurem m√©s endavant.
- Un altre objectiu important dels RAIDs √©s millorar el rendiment del sistema mitjan√ßant la **distribuci√≥** de les dades entre els diferents dispositius. Aix√≤ permet millorar la velocitat de lectura i escriptura de les dades. Es coneix tamb√© com **striping** o en altres paraules ens permet incrementar la **ample de banda**.
:::

## Qu√® √©s el rendiment i la redund√†ncia?

- La **redund√†ncia** √©s la capacitat d'un sistema de continuar funcionant en cas de fallada d'un o m√©s dispositius. Aquesta capacitat es pot aconseguir mitjan√ßant la **duplicaci√≥** de les dades o mitjan√ßant la **paritat**.

- El **rendiment** √©s la capacitat d'un sistema de processar un volum de dades en un temps determinat. Aquesta capacitat es pot aconseguir mitjan√ßant la **distribuci√≥** de les dades entre els diferents dispositius, mitjan√ßant una t√®cnica coneguda com **striping**.


## Conceptes b√†sics {.smaller}

- **Redund√†ncia**: Capacitat de tolerar fallades de dispositiu (*quantitat de discs que poden fallar sense perdre dades*).
- **Rendiment**: Mesurat en *IOPS* i ample de banda *MB/s*. Dep√®n de la *mida de stripe*,*nombre de discs* i *patr√≥ d'acc√©s (seq√ºencial vs aleatori)*.
- **Capacitat**: La capacitat total del sistema √©s la suma de les capacitats dels dispositius que el formen, tenint en compte la redund√†ncia.
- **Stripe**: Un stripe √©s una unitat d'informaci√≥ que es distribueix entre els diferents dispositius que formen el RAID. Conjunt de blocs distribu√Øts entre discs dins del RAID.
- **Bloc**: Un bloc √©s una unitat d'informaci√≥ que es llegeix o s'escriu en un dispositiu d'emmagatzematge. (**512B, 4KB...**).

:::{.callout-note title="Difer√®ncia entre Stripe i Bloc"}
Amb 2 dispositius i  un stripe de 64 KB, cada dispositiu guarda 64 KB alternatius d‚Äôun fitxer.
:::

## Implementacions de RAIDs {.smaller}

- **Software RAID**: Implementat a nivell de sistema operatiu. 
  - **Avantatges**: flexibilitat, transpar√®ncia, no dep√®n del hardware.
  - **Inconvenients**: CPU utilitzat per c√†lculs de paritat.

- **Hardware RAID**: Controladora dedicada (caracter√≠stiques pr√≤pies, cache, acceleraci√≥ XOR). 
  - **Avantatges**: millors rendiments en alguns escenaris; 
  - **Inconvenients**: depend√®ncia del controlador, propietat de metadades.

- **Fake/BIOS RAID**: Soluci√≥ mixta (*controladora amb firmware m√≠nim*). Pot generar problemes de portabilitat i compatibilitat.

## Implementacions de RAIDs

::: columns
::: {.column width="50%"}
![](../figs/slides/03-raids/SWRAID.png)
:::
::: {.column width="50%"}
![](../figs/slides/03-raids/HWRAID.png)

:::
:::


## RAID Lineal {.smaller}

::: center-container
`cat` l√≤gic entre diversos dispositius d'emmagatzematge f√≠sics. **JBOD** (Just a Bunch Of Disks). No millora ni la redund√†ncia ni el rendiment.
:::

::: center-container
![](../figs/slides/03-raids/LINEAR.png)
:::



::: notes
- El RAID lineal √©s el m√©s b√†sic de tots els tipus de RAID.
-  En aquest sistema, la informaci√≥ es distribueix primer en un disc i despr√©s en l'altre, seguint un ordre seq√ºencial. Cada unitat d'informaci√≥ es coneguda com a **stripe**, i correspon a un bloc.

- La figura mostra un exemple de RAID Lineal (/dev/md0) amb dos discos (/dev/vda i /dev/vdb). En aquest exemple s'han guardat els primers blocs (1 al 6) a la partici√≥ (/dev/vda1). Ara, s'ha d'assumir que la partici√≥ (/dev/sda1) es plena. Els seg√ºents blocs es guarden a la seg√ºent partici√≥ disponible (/dev/vdb1). I aix√≠ successivament.
:::

## RAID 0 (Striping) {.smaller}

::: columns
::: {.column width="55%"}

![](../figs/slides/03-raids/RAID0.png)

:::
::: {.column width="5%"}
:::
::: {.column width="40%"}

- **Objectiu**: augmentar rendiment i capacitat (*capacitat = suma de discos*).
- **Mida de stripe**: 
  - Petits milloren IOPS aleatoris.
  - Grans stripes milloren seq√ºencials.
- Si les dades s√≥n prou grans, es poden llegir/escriure en paral¬∑lel.
- **Toler√†ncia a fallades**: 0 (p√®rdua total si un disc falla).
- **Aplicacions**: cache, fitxers temporals, tasques on la redund√†ncia no √©s priorit√†ria.

:::
:::

::: notes
- El nivell 0 de RAID √©s un dels m√©s senzills i m√©s utilitzats. El seu objectiu principal √©s millorar el rendiment del sistema mitjan√ßant la **distribuci√≥** de les dades entre els diferents dispositius.
- Aquesta distribuci√≥ es realitza mitjan√ßant una t√®cnica coneguda com **striping**. Aquesta t√®cnica permet dividir les dades en blocs m√©s petits i distribuir-los entre els diferents dispositius. Fent Round Robin a tots els dispositius.
- Aix√≤ permet millorar la velocitat de lectura i escriptura de les dades, per tant incrementa l'**ample de banda**.
- La capacitat del sistema tamb√© es veu incrementada, ja que la capacitat total del sistema √©s la suma de les capacitats dels dispositius que el formen.
- El principal desavantatge del nivell 0 de RAID √©s que no ofereix cap tipus de redund√†ncia. Aix√≤ vol dir que si un dels dispositius falla, es perden totes les dades del sistema.
- La figura  mostra un exemple de RAID0 (/dev/md0) amb dos discos (/dev/vda i /dev/vdb). En aquest exemple s‚Äôhan guardat els primers blocs (1 al 6) de forma alternada 1 a cada disc. El seg√ºent bloc (9) es guarda al disc (/dev/vdb). En aquest exemple, els blocs parells es guarden al disc (/dev/vdb) i els senars al disc (/dev/vda).
:::

## RAID 1 (Mirror) {.smaller}

::: columns
::: {.column width="60%"}

![](../figs/slides/03-raids/RAID1.png)

:::
::: {.column width="40%"}

- **Objectiu**: redund√†ncia via duplicaci√≥ exacta (**mirrors**).
- **Lectures**: potencialment paral¬∑leles (millora), dep√®n del controlador.
- **Escriptures**: es repliquen en tots els mirrors (overhead escritura).
- **Capacitat usable**: 50% amb 2 discos (*en general n/2 en conjunts de mirrors*).
- **Aplicacions**: sistema root, dades cr√≠tiques on la coher√®ncia immediata √©s priorit√†ria.

:::
:::

::: notes

- El nivell 1 t√© com a objectiu principal  millorar la **redund√†ncia** del sistema mitjan√ßant la **duplicaci√≥** de les dades en dos dispositius.
- La figura 1.3 mostra un exemple de RAID1 (/dev/md0) amb dos discos (/dev/vda i /dev/vdb). En aquest exemple s‚Äôhan guardat els primers blocs (1 al 6) de forma id√®ntica en els dos discos. Aix√≤ significa que si un dels discos falla, l‚Äôaltre disc pot continuar funcionant sense interrupci√≥, ja que cont√© una c√≤pia completa de totes les dades.
- Per tant, el principal avantatge del nivell 1 de RAID √©s la redund√†ncia. Aix√≤ vol dir que si un dels dispositius falla, es poden recuperar les dades sense problemes.
- Un altre avantatge del nivell 1 de RAID √©s que permet realitzar lectures gaireb√© el doble de r√†pides, ja que es poden llegir les dades de forma simult√†nia des dels dos dispositius.
- Per contra, el nivell 1 de RAID tamb√© t√© alguns desavantatges. El principal desavantatge √©s el cost, ja que es necessiten m√©s dispositius per a duplicar les dades. Aix√≤ vol dir que el cost del sistema es duplica. A m√©s, l‚Äôescriptura √©s m√©s lenta, ja que es necessita escriure les dades en els dos dispositius de forma simult√†nia. Finalment, la capacitat del sistema tamb√© es veu redu√Øda, ja que nom√©s es pot utilitzar la meitat de la capacitat total dels dispositius.
:::


## RAID 2 {.smaller}

::: center-container
![](../figs/slides/03-raids/RAID2.png){width="60%"}
:::

- El stripe √©s a nivell de **bit** i no de bloc com fins ara.
- **Pr√†cticament obsolet** en sistemes moderns: exigeix molts discs i acc√®s sincronitzat.


::: notes

- El nivell 2 de RAID utilitza la paritat per detectar i corregir errors en les dades. Aquesta paritat es calcula mitjan√ßant bits de control anomenats **bits de paritat**.

- Observem que el stripe √©s a nivell de bit i no de bloc com fins ara. Aix√≤ vol dir que les dades es divideixen en bits m√©s petits i es distribueixen entre els diferents dispositius.

- La Figura 1.4 mostra un exemple d‚Äôuna configuraci√≥ RAID 2 que implementa un codi Hamming(4,3), √©s a dir, 4 bits de dades i 3 bits de paritat. Aquesta configuraci√≥ pot semblar poc pr√†ctica en molts contextos, per√≤ ens proporciona una comprensi√≥ clara de com funciona la codificaci√≥ de les dades i, en particular, la codificaci√≥ de Hamming.

- Els codis Hamming s√≥n una classe de codis de correcci√≥ d‚Äôerrors que es basen en la paritat. Aquests codis s√≥n molt √∫tils per a la detecci√≥ i correcci√≥ d‚Äôerrors en les dades, ja que permeten identificar i corregir errors en les dades sense necessitat de retransmissi√≥.

- El seu √∫s es poc pr√†ctic en molts contextos, ja que requereix una gran quantitat de dispositius i afegeix la complexitat de la implementaci√≥ de la codificaci√≥ de Hamming **(encoded)**.
:::

## Codis de Hamming {.smaller}

Els codis de Hamming s√≥n una classe de codis de **correcci√≥ d‚Äôerrors** que es basen en la *paritat*. Aquests codis s√≥n molt √∫tils per a la detecci√≥ i correcci√≥ d‚Äôerrors en les dades, ja que permeten identificar i corregir errors en les dades sense necessitat de retransmissi√≥. 

- El **codi de Hamming** permet **detectar i corregir un sol error de bit**.  
- S‚Äôutilitza en el **RAID 2** per protegir dades a nivell de bit.
- S‚Äôintercalen bits de **paritat** entre els bits de **dades**.  
- Cada bit de paritat comprova un conjunt espec√≠fic de bits de dades.  
- Si un bit es corromp, la combinaci√≥ dels bits de paritat indica **quin bit** s‚Äôha de corregir.

## XOR (Operaci√≥ b√†sica) {.smaller}

La operaci√≥ XOR (exclusive OR) √©s una operaci√≥ l√≤gica que compara dos bits i retorna un bit de resultat. El resultat √©s 1 si els bits comparats s√≥n diferents, i 0 si s√≥n iguals.

| A | B | $A \oplus B$ |
|---|---|:---------:|
| 0 | 0 |    0    |
| 0 | 1 |    1    |
| 1 | 0 |    1    |
| 1 | 1 |    0    |


## Hamming(7,4) -> [0110] {.smaller}

|       |  1   |  2   |  3   |  4   |  5   |  6   |  7   |
|-------|-----|-----|-----|-----|-----|-----|-----|
|       | $p_1$ | $p_2$ | $d_1$ | $p_3$ | $d_2$ | $d_3$ | $d_4$ |
| Dades |     |     |  0  |     |  1  |  1  |  0  |
| $p_1$ | **1** |     |  0  |     |  1  |     |  0  |
| $p_2$ |     | **1** |  0  |     |     |  1  |  0  |
| $p_3$ |     |     |     |**0**|  1  |  1  |  0  |
| Codi  |  1  |  1  |  0  |  0  |  1  |  1  |  0  |


> - Els bits que s√≥n pot√®ncia de 2 ($2^k$, k=0,1, 2‚Ä¶) s√≥n els bits de paritat. 
> - Bits de paritat =  XOR bits de dades amb el $n^o$ de bit de paritat.

::: center-container
**[0110]** es codifica com **[1100110]**
:::


## Comprovaci√≥ d'errors amb Hamming [1100110] {.smaller}

- Es calcula els bits de **Comprovaci√≥** = XOR del bits de paritat  i de tots els seus bits de dades associats:

|          |  1   |  2   |  3   |  4   |  5   |  6   |  7   | |
|----------|-----|-----|-----|-----|-----|-----|-----|:-----:|
|          | p$_1$ | p$_2$ | d$_1$ | p$_3$ | d$_2$ | d$_3$ | d$_4$ | Comprovaci√≥    |
| Codi     |  1  |  1  |  0  |  0  |  1  |  1  |  0  |                 |
| p$_1$    |  1  |     |  0  |     |  1  |     |  0  |         **0**        |
| p$_2$    |     |  1 |  0  |     |     |  1  |  0  |         **0**       |
| p$_3$    |     |     |     |  0  |  1  |  1  |  0  |         **0**      |


::: center-container
Tots els **bits de comprovaci√≥ = 0** ‚Üí cap error detectat.
:::


## Comprovaci√≥ d'errors amb Hamming [1100111] {.smaller}

|       |  1   |  2   |  3   |  4   |  5   |  6   |  7   | | 
|----------|-----|-----|-----|-----|-----|-----|-----|:-----:|
|          | p$_1$ | p$_2$ | d$_1$ | p$_3$ | d$_2$ | d$_3$ | d$_4$ | Comprovaci√≥    |
| Codi     |  1  |  1  |  0  |  0  |  1  |  1  | **1** |                 |
| p$_1$    |  1  |     |  0  |     |  1  |     |  1  |        **1**        |
| p$_2$    |     |  1  |  0  |     |     |  1  |  1  |         **1**       |
| p$_3$    |     |     |     |  0  |  1  |  1  |  1  |         **1**      |

::: center-container
S'ha alterat el bit 7 corresponent a d$_4$. 
:::

## Comprovaci√≥ d'errors amb Hamming [0100110] {.smaller}

|          |  1   |  2   |  3   |  4   |  5   |  6   |  7   | |
|----------|-----|-----|-----|-----|-----|-----|-----|:-----:|
|          | p$_1$ | p$_2$ | d$_1$ | p$_3$ | d$_2$ | d$_3$ | d$_4$ | Comprovaci√≥    |
| Codi     |  **0**  |  1  |  0  |  0  |  1  |  1  |  0  |                 |
| p$_1$    |  0  |     |  0  |     |  1  |     |  0  |        **1**        |
| p$_2$    |     |  1  |  0  |     |     |  1  |  0  |         **0**       |
| p$_3$    |     |     |     |  0  |  1  |  1  |  0  |         **0**      |

::: center-container
Els bits de **comprovaci√≥ = 001** ‚Üí s'ha alterat el bit 1 corresponent a $p_1$.
:::


## RAID 3 i 4 {.smaller}

::: columns
::: {.column width="50%"}

![](../figs/slides/03-raids/RAID4.png)

:::
::: {.column width="50%"}

- **RAID 3**: striping a nivell de *byte*, paritat en disc dedicat; acc√©s molt sincronitzat ‚Üí bo per fitxers grans i seq√ºencials (p.ex. streaming).
- **RAID 4**: striping a nivell de *bloc*, paritat en disc dedicat; permet accessos independents per bloc per√≤ pateix bottleneck al disc de paritat.
- En ambd√≥s casos la paritat dedicada pot ser coll d'ampolla per escriptura.

:::
:::

::: notes

- La difer√®ncia entre un RAID 3 i 4 √©s la granularitat de la paritat. En un RAID 3 la paritat es calcula a nivell de bytes i en un RAID 4 a nivell de blocs.
- Les dades es distribueixen com un RAID 0 i la paritat es guarda en un disc dedicat.
- En realitat, en un RAID 3 o 4, les dades no es dupliquen, sin√≥ que es calcula una paritat. Si un disc falla, les dades es poden recuperar utilitzant la informaci√≥ de paritat dels altres discs.
- La figura  il¬∑lustra un exemple de configuraci√≥ RAID 4. En aquest exemple, el RAID 4, identificat com a /dev/md0, est√† format per cinc discos: /dev/vda, /dev/vdb, /dev/vdc, /dev/vdd i /dev/vde. En aques- ta configuraci√≥ RAID 4, els primers quatre discos (/dev/vda, /dev/vdb, /dev/vdc, i /dev/vdd) s‚Äôutilitzen per emmagatzemar les dades. El cin- qu√® disc (/dev/vde) s‚Äôutilitza exclusivament per a la paritat.
:::

## RAID 5 {.smaller}

::: columns
::: {.column width="50%"}

![](../figs/slides/03-raids/RAID5.png)
:::
::: {.column width="50%"}
- Paritat distribu√Øda entre tots els discos (evita coll d'ampolla √∫nic).
- **Toler√†ncia**: 1 disc (*hi ha un petit risc durant `rebuild`*). Probabilitat de fallada en discs grans.
- **Lectura**: alta (com RAID0).
- **Escriptura**: penalitzaci√≥ per read-modify-write (llegir bloc antic, llegir paritat antiga, escriure dades i paritat nova) ‚Äî cr√≠tic per a c√†rregues amb moltes escriptures petites. 
- **Capacitat**: $(n-1)/n$.
- **Aplicacions**: sistemes de fitxers, bases de dades, servidors web.
:::
:::

::: notes

- El RAID 5 √©s un dels nivells de RAID m√©s utilitzats en els sistemes inform√†tics actuals. Aquest RAID ofereix un bon equilibri entre rendiment i redund√†ncia.
- La principal difer√®ncia entre un RAID 4 i un RAID 5 √©s que en un RAID 5 la paritat es distribueix entre els diferents discs per evitar el coll d'ampolla.
- La figura il¬∑lustra un exemple de configuraci√≥ RAID 5. En aquesta configuraci√≥, la paritat es distribueix entre tots els discs, en lloc de ser emmagatzemada en un disc dedicat com en el RAID 4.
:::

## RAID 6 {.smaller}

- Extensi√≥ de RAID5 amb doble paritat (P i Q) ‚Üí tolera 2 fallades simult√†nies.
- Recomanat en conjunts grans (n gran) on la probabilitat de fallada durant rebuild √©s significativa.
- Penalitzaci√≥ d'escriptura m√©s elevada que RAID5, per√≤ millor toler√†ncia.

## RAID 10 {.smaller}

::: center-container
**mirror + stripe**. Toler√†ncia variable segons quins discs fallen; reconstrucci√≥ molt m√©s r√†pida.
:::

![](../figs/slides/03-raids/RAID10.png)

## RAID 50 {.smaller}

::: center-container
**Stripe** sobre m√∫ltiples conjunts *RAID5*. Millora rendiment i toler√†ncia depenent de cada grup.
:::

![.](../figs/slides/03-raids/RAID50.png)


## Comparativa de RAIDs {.smaller}

| Nivell | Min discs | Capacitat | Toler√†ncia | Lectura | Escriptura |
|-------|-----------|------------------|------------|---------|------------|
| RAID 0 | 2 | 100% | 0 | Alt | Alt | 
| RAID 1 | 2 | 50% (amb 2 discos) | 1 per mirror | Pot ser Alt | Mitj√† | 
| RAID 5 | 3 | $(n-1)/n$ | 1 | Alt | Mitj√†-Baix |
| RAID 6 | 4 | $(n-2)/n$ | 2 | Alt | Mitj√†-Baix (pitjor que RAID5) |
| RAID 10 | 4 | 50% (dep√®n) | ‚â•1 (segons fallades) | Alt | Alt | 
| RAID 50 | 6 | aproximadament $(n-1)/n$ per grup | ‚â•1 per grup | Alt | Mitj√† | 


::: notes

- La taula mostra una comparativa entre els diferents nivells de RAID m√©s comuns. Aquesta comparativa inclou les caracter√≠stiques m√©s importants de cada RAID, com ara el nombre m√≠nim de dispositius, la redund√†ncia, el rendiment en lectura i escriptura i la capacitat.
- Com es pot observar, cada RAID t√© les seves pr√≤pies caracter√≠stiques i avantatges. Per exemple, el RAID 0 ofereix un rendiment molt alt en lectura i escriptura, per√≤ no ofereix cap tipus de redund√†ncia. En canvi, el RAID 1 ofereix una alta redund√†ncia, per√≤ el rendiment en escriptura √©s baix.
- Per exemple, la instal¬∑laci√≥ d'un sistema operatiu es podria fer en un RAID 1, ja que la redund√†ncia √©s m√©s important que el rendiment.
- En canvi, un servidor web seria m√©s adequat en un RAID 5, ja que ofereix un bon equilibri entre rendiment i redund√†ncia.
- En general, la selecci√≥ del RAID m√©s adequat dep√®n de les necessitats del sistema i dels usuaris.
:::



# RAIDs a Linux

## Dispositiu `/dev/md*` {.smaller}

- Linux implementa Software RAID mitjan√ßant el subsistema del kernel MD (Multiple Device).
- El m√≤dul principal √©s `md_mod`, que crea dispositius virtuals de bloc `/dev/mdX` sobre dispositius f√≠sics (`/dev/sd*`, `/dev/nvme*`, etc.).
- Cada dispositiu MD √©s gestionat per un controlador de tipus `mdX` que mant√© una taula de mapatge (metadata) amb:
  - nivell RAID (`level`)
  - nombre de dispositius (`raid_disks`)
  - superblocs (`superblock`)
  - estat de sincronitzaci√≥ i fallades

## Components del subsistema MD {.smaller}

| Component                              | Funci√≥ principal                                                                |
| -------------------------------------- | ------------------------------------------------------------------------------- |
| **md_mod**                             | Gestor principal del subsistema MD (creaci√≥ i manteniment de /dev/mdX).         |
| **raid0, raid1, raid5, raid6, raid10** | M√≤duls del kernel que implementen la l√≤gica espec√≠fica de cada nivell RAID.     |
| **mdadm**                              | Eina *user-space* que interactua amb el subsistema MD via `ioctl` i `sysfs`.    |
| **/proc/mdstat**                       | Punt d‚Äôentrada per consultar estat de sincronitzaci√≥, reconstrucci√≥ i fallades. |
| **/sys/block/mdX**                     | Directori amb informaci√≥ detallada i opcions de configuraci√≥ per a cada mdX.    |

## Flux d'operacions {.smaller}

```{mermaid}
%%| echo: false
sequenceDiagram
    participant A as Aplicaci√≥
    participant B as Sistema de fitxers
    participant C as VFS
    participant D as /dev/mdX (md_mod)
    participant E as Driver RAIDn
    participant F as Discos f√≠sics

    A->>B: Read/Write
    B->>C: Operaci√≥ de fitxer
    C->>D: Acc√©s a /dev/mdX
    D->>E: Gesti√≥ RAID
    E->>F: Acc√©s a discos f√≠sics
```

- Les operacions de *paritat, mirroring o striping* s‚Äôexecuten al context del kernel, sovint amb tasques as√≠ncrones (`mdX_raid_thread`).
- Les metadades del RAID s‚Äôemmagatzemen al final (o inici) de cada disc com a superblock *MD v1.x*.
- Des del kernel 4.0 es pot utilitzar **reshape** per canviar el nivell RAID o afegir dispositius en viu.



## Paquet `mdadm` {.smaller}

En la majoria de les distribucions de Linux, el paquet `mdadm` permet la creaci√≥ i gesti√≥ de dispositius RAID.

::: columns
::: {.column width="50%"}

### Distribucions basades en Red Hat

```bash
dnf search mdadm
```

```bash
dnf install mdadm -y
```

:::
::: {.column width="50%"}

### Distribucions basades en Debian

```bash
apt search mdadm
```

```bash
apt install mdadm -y
```

:::
:::

::: center
El funcionament del paquet `mdadm` √©s similar en totes les distribucions de Linux. Per tant, les instruccions d'√∫s s√≥n similars i no importa la distribuci√≥ que s'utilitzeu.
:::

## Creaci√≥ de Dispositius RAIDs {.smaller}

::: columns
::: {.column width="50%"}

### Opcions B√†siques {.smaller}

```bash
mdadm --create --verbose /dev/[nom] 
--level=[nivell] 
--raid-devices=[n¬∫ dispositius] [dispositius]
```

- **`--create`**: Crea un nou dispositiu RAID.
- **`--verbose`**: Mostra informaci√≥ detallada sobre el proc√©s.
- **`/dev/[nom]`**: Nom del dispositiu RAID.
- **`--level=[nivell]`**: RAID.
- **`--raid-devices=[n¬∫ dispositius]`**: Nombre de dispositius que formen el RAID.
- **`[dispositius]`**: Llista de dispositius que formen el RAID.

::: {.column width="5%"}
:::
:::
::: {.column width="45%"}

### Altres Opcions

```bash
mdadm --create --help
```

- **`--metadata=[tipus]`**: Tipus de metadades.
- **`--spare-devices=[n¬∫ dispositius]`**: Nombre de dispositius reservats.
- **`--chunk=[mida]`**: Mida dels blocs.
- **`--layout=[esquema]`**: Esquema de distribuci√≥ de les dades.

:::
:::

## Gesti√≥ del RAID `(--manage)` {.smaller}


```bash
mdadm --manage /dev/[nom] [options] [dispositius]
  --add         -a   : afegeix dispositius posteriors a l'array
  --re-add           : els dispositius posteriors s√≥n reafegits si eren
                     : membres recents de l'array
  --remove      -r   : elimina els dispositius posteriors, que no han d'estar actius
  --fail        -f   : marca els dispositius posteriors com a defectuosos
  --set-faulty       : igual que --fail
  --replace          : marca el(s) dispositiu(s) per ser reempla√ßat(s) per recanvis. 
                     : Un cop completat el reempla√ßament, el dispositiu es marcar√† 
                     : com a defectu√≥s
  --with             : indica quin recanvi hauria de preferir un '--replace' anterior
  --run         -R   : inicia un array parcialment constru√Øt
  --stop        -S   : desactiva l'array, alliberant tots els recursos
  --readonly    -o   : marca l'array com a nom√©s lectura
  --readwrite   -w   : marca l'array com a lectura i escriptura
```

## Informaci√≥ i Monitoratge del RAID  {.smaller}

Les opcions `--detail` i `--examine` permeten obtenir informaci√≥ detallada sobre un dispositiu RAID. La principal difer√®ncia entre ambdues opcions √©s que `--examine` mostra informaci√≥ m√©s detallada sobre el dispositiu.

::: columns
::: {.column width="50%"}

```bash
mdadm --detail /dev/[nom]
```

:::
::: {.column width="50%"}

```bash
mdadm --examine /dev/[nom]
```

:::
:::

La opci√≥ `--monitor` permet monitorar un dispositiu RAID en temps real. Obtenint informaci√≥ sobre els esdeveniments que es produeixen en el dispositiu i ens permet prendre accions en conseq√º√®ncia.

```bash
mdadm --monitor /dev/[nom]
```
## Actualitzaci√≥ amb `--grow` {.smaller}

Aquesta opci√≥ permet actualitzar un dispositiu RAID. Per exemple, canviar el RAID, augmentar el nombre de dispositius o canviar la mida dels blocs.

```bash
mdadm --grow /dev/[nom] --level=[nivell] --raid-devices=[n¬∫ dispositius]
```

- **Situaci√≥ I**: En un RAID5 format per 3 discs, ens pot interessar al cap del temps afegir un disc m√©s.
- **Situaci√≥ II**: En un RAID5 format per 4 discs, ens pot interessar al cap del temps canviar el RAID a 6.
- **Situaci√≥ III**: En un RAID5 format per 4 discs, ens pot interessar al cap del temps canviar la mida dels blocs.

:::{.callout-important title="Compte!"}
Amb aquestes operacions, el sistema pot quedar inutilitzat.  √âs recomanable fer una c√≤pia de seguretat abans de realitzar aquestes operacions.
:::

## Aturar i Eliminar un RAID {.smaller}

Per aturar un RAID, podem utilitzar l'opci√≥ `--stop` del mode `--manage` de `mdadm`. Aquesta opci√≥ desactiva l‚Äôarray i allibera tots els recursos associats.

```bash
mdadm --manage /dev/[nom] --stop
```

:::{.callout-important title="Compte!"}
Aquesta operaci√≥ no **destruir√†** l'array, sin√≥ que simplement el desactivar√†. Per eliminar un raid podem eliminar el seu dispositiu associat, sempre primer aturant l'array.

```bash
mdadm --manage /dev/[nom] --stop
rm /dev/[nom]
```
:::

# Casos Pr√†ctics


## Cas Pr√†ctic (I) {.smaller}

Assumeix que vols configurar un RAID per configurar la partici√≥ *root* del teu servidor Debian. *quin RAID recomanaries i que t'aportaria?*


- El **RAID 0** ofereix una major velocitat de lectura i escriptura, per√≤ no proporciona cap mena de redund√†ncia. Una fallada en un disc faria que es perdessin totes les dades. Per tant, no √©s una bona opci√≥ per a un sistema root.

- El **RAID 1** ofereix redund√†ncia. No obstant aix√≤, no millora la velocitat d'escriptura. Aquest RAID √©s una bona opci√≥ per a un sistema root, ja que assegura la integritat de les dades.
  
- El **RAID 5**. Aquest RAID ofereix redund√†ncia i una millora en la velocitat de lectura. No obstant aix√≤, requereix un m√≠nim de tres discs i la velocitat d'escriptura pot veure's afectada per les operacions de paritat. Aquest RAID pot ser una bona opci√≥ per a emmagatzemament de dades, per√≤ pot ser massa complex per a un sistema root.

- **El RAID 10** combina les caracter√≠stiques del RAID 1 i del RAID 0, oferint tant redund√†ncia com una millora en la velocitat de lectura i escriptura. Aquest RAID pot ser una bona opci√≥ per a un sistema que requereixi un alt rendiment, per√≤ pot ser massa cost√≥s per a un sistema root.

::: notes
- La meva recomanaci√≥ √©s utilitzar **RAID 1** per a un sistema *root*, ja que proporciona la redund√†ncia necess√†ria per assegurar la integritat de les dades del sistema. Si la velocitat de lectura √©s una preocupaci√≥, es podria considerar l'√∫s d'un disc SSD
:::

## Cas Pr√†ctic (II) {.smaller}

Assumeix que vols configurar un servidor  amb dos discs SATA per fer renders de v√≠deo on l'objectiu principal es millorar el rendiment i la capacitat d'enmagatzemament temporal. *Quin RAID recomanaries?*

- Com √∫nicament es disposa de dos discs, el **RAID 0** seria la millor opci√≥. Aquest RAID millora el rendiment i la capacitat d'emmagatzemament temporal, ja que les dades es divideixen i s'emmagatzemen en els dos discs de forma simult√†nia. No obstant aix√≤, cal tenir en compte que el RAID 0 no ofereix cap mena de redund√†ncia. Per tant, si un dels discs falla, es perdran totes les dades. S'haurien de fer c√≤pies de seguretat regulars per evitar la p√®rdua de dades.


## Cas Pr√†ctic (III) {.smaller}

Assumeix un servidor de bases de dades on la integritat de les dades es cr√≠tica i les transaccions han de ser r√†pides. *Quin RAID recomanaries?*

- En aquest cas, el **RAID 10** seria la millor opci√≥. Aquest RAID combina les caracter√≠stiques del RAID 1 i del RAID 0, oferint tant redund√†ncia com una millora en la velocitat de lectura i escriptura. Aix√≤ √©s important per a un servidor de bases de dades on la integritat de les dades √©s cr√≠tica i les transaccions han de ser r√†pides.

## That's all

::::::: columns
:::: {.column width="45%"}
::: {.callout-note title="Take Home Message"}
Els RAIDs s√≥n un conjunt de dispositius d'emmagatzematge que es combinen per a formar un sistema d'emmagatzematge √∫nic.
- El principal objectiu d'aquesta combinaci√≥ √©s tolerar les fallades que es poden produir en els dispositius d'emmagatzematge mitjan√ßant la **redund√†ncia**.
- Un altre objectiu important dels RAIDs √©s millorar el rendiment del sistema mitjan√ßant la **distribuci√≥** de les dades entre els diferents dispositius.
:::
::::

::: {.column width="5%"}
:::

::: {.column width="50%"}
![](https://static.posters.cz/image/750/posters/looney-tunes-thats-all-folks-i295.jpg){width="70%"}
:::
:::