---
title: Modificant la contrasenya de l'usuari root a trav√©s del GRUB
lang: ca
---

## Objectiu

- Entendre com funciona la edici√≥ temporal del GRUB.
- Entendre com protegir el GRUB amb una contrasenya.
- Entendre com GRUB pot ser un vector d‚Äôacc√©s f√≠sic al sistema.

## Escenari
Un atacant amb **acc√©s f√≠sic** al servidor podria modificar la contrasenya de l‚Äôusuari root iniciant el sistema des del GRUB. En aquesta pr√†ctica assumirem aquest escenari de manera controlada.

## Requeriments previs

- Una m√†quina virtual amb Debian 12 amb GRUB com a gestor d‚Äôarrencada.

## Procediment

1. **Acc√©s al GRUB**
   - Reinicia el sistema i accedeix al men√∫ del **bootloader GRUB**.
   - Selecciona la entrada del sistema operatiu i prem `e` per editar-la.

2. **Modificaci√≥ de la l√≠nia del kernel**
   - Localitza la l√≠nia que comen√ßa amb `linux` i acaba amb `ro`.
   - Afageix `init=/bin/bash` al final.
   - Aquesta opci√≥ indica al kernel iniciar directament un **shell** sense passar pel proc√©s d‚Äôinicialitzaci√≥ normal.

:::{.callout-note title="`init=/bin/bash`"}
Aquesta opci√≥ fa que el sistema arranqui directament en un shell de bash com a root, evitant els processos d'inicialitzaci√≥ habituals. Tots els serveis *systemd* i altres processos no s'inicien, i el sistema es troba en un estat m√≠nim, amb nom√©s el shell disponible.
:::

3. **Inici amb les opcions modificades**
   - Prem `Ctrl + X` per iniciar el sistema amb aquesta configuraci√≥.
   - Accedir√†s a un **prompt de bash** amb permisos de root.

4. **Muntar el sistema de fitxers en mode escriptura**
   ```bash
   mount -o remount,rw /
    ```

:::{.callout-note title="`mount -o remount,rw /`"}
Com alternativa, es pot editar la l√≠nia del kernel per canviar `ro` (read-only) a `rw` (read-write). Aix√≤ permetr√† que el sistema de fitxers es monti en mode escriptura des del principi, evitant la necessitat de remuntar-lo m√©s tard.
:::

5. **Accedir a l'arrel amb chroot**

   ```bash
   chroot /
   ```

:::{.callout-note title="`chroot`"}
Una chroot (change root) √©s una operaci√≥ que canvia el directori arrel aparent d'un proc√©s i els seus fills a un directori especificat. Aix√≤ crea un entorn a√Øllat on el proc√©s veu el directori especificat com la seva arrel (`/`), permetent executar processos en un sistema de fitxers diferent sense afectar el sistema principal.
:::

6. **Canviar la contrasenya de root**

    ```bash
    passwd
    ```
    
    - Introdueix la nova contrasenya quan se't demani.

7. **Sincronitzar els canvis i reiniciar**

    ```bash
    exit 
    reboot
    ```

:::{.callout-note title="Solcuci√≥ si `reboot` no funciona"}
Si el sistema no respon a la comanda `reboot`, pots for√ßar un reinici f√≠sic de la m√†quina virtual.
:::

1. **Iniciar sessi√≥ amb l'usuari normal**.
2. **Canviar a l'usuari root** amb la nova contrasenya. `su -`

## Protecci√≥ del GRUB

Per protegir el GRUB i evitar que un atacant amb acc√©s f√≠sic pugui modificar les opcions d'arrencada, es pot configurar una contrasenya per al GRUB.

1. **Generar una contrasenya xifrada**
   - Utilitza la comanda seg√ºent per generar una contrasenya xifrada:
     ```bash
     grub-mkpasswd-pbkdf2
     ```
   - Introdueix la contrasenya desitjada i copia la sortida que comen√ßa amb `pbkdf2`.

2. **Editar la configuraci√≥ del GRUB**
   - Obre el fitxer de configuraci√≥ del GRUB:

        ```bash
        # Com a root
        vi /etc/grub.d/40_custom
        ```

    - Afegeix les l√≠nies seg√ºents al fitxer, substituint `your_encrypted_password` per la contrasenya xifrada que has generat:

        ```bash
        set superusers="root"
        password_pbkdf2 root your_encrypted_password
        ```

3. **Actualitzar la configuraci√≥ del GRUB**
    - Despr√©s d'haver editat el fitxer, actualitza la configuraci√≥ del GRUB:

        ```bash
        update-grub    # Debian/Ubuntu
        grub2-mkconfig -o /boot/grub2/grub.cfg  # Alma/Rocky (BIOS)
        grub2-mkconfig -o /boot/efi/EFI/almalinux/grub.cfg  # Alma/Rocky (UEFI)
        ```
4. **Reiniciar el sistema**

        ```bash
        reboot
        ```

5. **Verificar la protecci√≥ del GRUB**
   - Durant l'arrencada, intenta editar una entrada del GRUB. Hauries de ser sol¬∑licitat per una contrasenya.

:::{.callout-important title="üëÅÔ∏è Observaci√≥"}
Malgrat l'√∫s d'una contrasenya per a protegir el GRUB, aquesta t√®cnica no √©s infal¬∑lible. Un atacant amb acc√©s f√≠sic pot montar un usb bootable i iniciar el sistema amb aquest dispositiu. Un cop iniciat el sistema, l'atacant podria montar el sistema de fitxers i modificar la contrasenya de l'usuari root. Ara b√©, es podria configurar el BIOS o UEFI per a desactivar l'arrencada des de dispositius externs com els USBs. Aix√≤ dificultaria l'acc√©s no autoritzat al sistema a trav√©s d'aquesta t√®cnica.
:::

## Reflexions

- Control f√≠sic del servidor: Limitar l‚Äôacc√©s f√≠sic √©s essencial.
- Desactivar arrencada des de dispositius externs: Configurar BIOS/UEFI per bloquejar USB/CD.
- Amb `LUKS/dm-crypt`, encara que l‚Äôatacant accedeixi f√≠sicament al GRUB, no podr√† llegir ni modificar les dades sense la clau.
- UEFI Secure Boot: Si est√† activat i el GRUB est√† signat, no es podr√† iniciar amb `init=/bin/bash` sense desactivar temporalment Secure Boot.





