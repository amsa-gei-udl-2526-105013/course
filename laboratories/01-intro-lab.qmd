---
title: Unitat 1 · Laboratori de preparació i comandes bàsiques d'administració
subtitle: Laboratoris Pràctics d'Administració de Sistemes i Aplicacions
---


##  Preparant l'entorn de treball  remot {#preparant-lentorn-de-treball-remot}

Per preparar l'entorn de treball a AWS, seguirem els següents passos:

1. Crear un compte d'AWS Academy
2. Accedir al tauler d'AWS
3. Crear un parell de claus SSH
4. Llançar una instància EC2
5. Connectar-se a la instància EC2 mitjançant SSH

### Pas 1: Creació d'un compte d'AWS Academy {#pas-1-creacio-dun-compte-daws-academy}

Reviseu el vostre correu electrònic per veure si heu rebut un correu electrònic d'AWS Academy amb l'assumpte *Invitació al curs*. Si no l'heu rebut, feu-m'ho saber. El correu electrònic contindrà un botó amb el text **Get Started**. Feu clic en aquest botó per iniciar el procés de registre.

![AWS Academy email](../figs/laboratories/01-intro/login0.png)

Després de fer clic al botó **Get Started**, sereu redirigits a la pàgina d'inici de sessió d'AWS Academy. Ara heu de fer clic al botó **Create my account** per iniciar el procés de registre, com es mostra a continuació:

![AWS Academy login](../figs/laboratories/01-intro/login1.png)

Seleccioneu una contrasenya i completeu el procés de registre. Un cop hàgiu completat el procés de registre, sereu redirigits al tauler d'AWS Academy. Enhorabona! Heu creat amb èxit el vostre compte d'AWS Academy.

### Pas 2: Accés al tauler d'AWS {#pas-2-acces-al-tauler-daws}

Ara que heu creat el vostre compte d'AWS Academy, podeu accedir al tauler d'AWS. El primer que heu de fer és fer clic a la pestanya **Courses** (1) a la part esquerra de la pantalla. Veureu una llista de cursos disponibles per a vosaltres. Feu clic al curs **AWS Academy Learner Lab** (2), com es mostra a la captura de pantalla següent:

![AWS Academy Learner Lab](../figs/laboratories/01-intro/login2.png)

::: {.callout-note}
El curs **AWS Academy Learner Lab** és el curs que utilitzareu per completar els laboratoris pràctics, si recordeu a la primera sessió vam parlar del curs **AWS Academy Cloud Foundations**, que no és obligatori però és altament recomanat per a aquells que vulguin tenir una base més sòlida i obtenir el 5% de l'apartat (*Async Activities		AWS*). 
:::

::: {.callout-warning}
Tingueu en compte que només hi ha un curs a la captura de pantalla següent, no és el que hauríeu de veure, hauríeu de veure dos cursos, un per al **AWS Academy Cloud Foundations** i un per al **AWS Academy Learner Lab**. Si no veieu el curs **AWS Academy Cloud Foundations** i voleu tenir accés a ell, feu-m'ho saber.
:::

Ara hem de buscar la pestanya **Modules** (1) a la part esquerra de la pantalla. Feu clic en ella i veureu una llista de mòduls disponibles per a vosaltres. Feu clic en el mòdul **AWS Academy Learner Lab** (2), com es mostra a continuació:

![AWS Academy Learner Lab](../figs/laboratories/01-intro/login3.png)

Ara se us demanarà que accepteu els termes i condicions del curs. Feu-ho desplaçant-vos fins al final de la pàgina i fent clic al botó **I Agree**.

![AWS Academy terms and conditions](../figs/laboratories/01-intro/login4.png)

Després d'acceptar els termes i condicions, ara només heu de fer clic al botó **Start Lab**.

![AWS Academy terms and conditions](../figs/laboratories/01-intro/login5.png)

::: {.callout-warning}
He provat amb Firefox i Google Chrome només. **Firefox no carrega el laboratori**. Si el vostre navegador no carrega el laboratori, us recomano provar amb un altre.
:::

Ara doneu-li uns minuts per carregar. Veureu aquesta animació mentre el laboratori s'està preparant per a vosaltres:

![AWS Academy terms and conditions](../figs/laboratories/01-intro/login6.png)

Finalment, quan el laboratori estigui llest, veureu que el punt al costat de **AWS** és verd. També veureu un temporitzador que compta enrere des de 4 hores. Aquest és el temps que teniu per treballar al laboratori. A l'esquerra del temporitzador veureu com va el vostre pressupost. Teniu un pressupost de 50 dòlars per gastar en serveis d'AWS. Feu clic a **AWS** per accedir al tauler d'AWS, com es mostra a continuació:

![AWS Academy terms and conditions](../figs/laboratories/01-intro/login7.png)


::: {.callout-important title="Consideracions sobre els laboratoris"}
- Els laboratoris són un entorn real d'AWS, per tant, és important que tingueu cura dels recursos i de les vostres accions.
- Si superes el pressupost de 50 dòlars, ja no tindràs accés al tauler d'AWS i **perdràs la teva feina**. Assegureu-vos de vigilar el pressupost, és responsabilitat de cada estudiant mantenir-se dins del pressupost.
- Els laboratoris tenen una durada de 4 hores. Un cop passades les 4 hores, la sessió expirarà i no podreu accedir al tauler d'AWS. No obstant això, això no vol dir que perdràs el teu treball automàticament. Les tasques i recursos que has creat (com ara instàncies EC2, buckets de S3, etc.) es mantindran accessibles entre sessions, sempre que no els eliminis manualment. Podeu tornar a iniciar el laboratori de forma il·limitada, però és una bona pràctica aturar o tancar manualment els serveis que ja no necessiteu per evitar que consumeixin recursos innecessàriament.

Per tant, si comences un laboratori i el deixes a mig fer, podràs reprendre'l en una sessió posterior. 
:::

Genial! Ara heu accedit al tauler d'AWS. Veureu una pantalla similar a la següent:

![AWS Dashboard](../figs/laboratories/01-intro/login8.png)

### Pas 3: Creació d'un parell de claus SSH {#pas-3-importació-de-la-clau-pública-a-aws}

Més endavant en aquest laboratori crearem una instància EC2, per treballar amb aquest ordinador remot necessitarem connectar-nos-hi mitjançant SSH. Per fer-ho, necessitarem un parell de claus SSH.

Anem a fer-ho utilitzant un terminal al nostre ordinador local. Recordeu que un terminal és un programa que us permet interactuar amb el vostre ordinador mitjançant ordres de text. Si això us sona confús, us recomano llegir [aquest post](https://medium.com/rewrite-tech/getting-friendly-with-the-terminal-a-super-friendly-beginners-guide-7ff0cd6425cd). Per als usuaris de Windows, també podeu llegir [aquest post](https://learn.microsoft.com/en-us/windows/terminal/) específic per al Windows Terminal. Els usuaris de MacOS ja haurien de tenir un terminal instal·lat al seu ordinador. I també hi ha [aquest vídeo genial](https://www.youtube.com/watch?v=rIp4n3V0_NU) que està orientat a una comprensió general del terminal adaptada per a científics de dades.

::: {.callout-note}
És molt important entendre quan estem treballant al nostre ordinador local i quan estem treballant a la màquina remota. El primer pas sempre serà obrir un terminal al nostre propi ordinador, però un cop ens connectem a la màquina remota mitjançant l'ordre SSH, encara que sembli que res no ha canviat, el terminal ara està **connectat a la màquina remota**. Això vol dir que a partir d'ara les ordres que escrivim s'executaran a la màquina remota, no al nostre ordinador local. Si no esteu segurs si esteu treballant al vostre ordinador local o a la màquina remota, només heu d'escriure `pwd` i veure quin és el resultat. Si és el vostre ordinador local, veureu la ruta al directori en què esteu al vostre ordinador local, si és la màquina remota, veureu la ruta al directori en què esteu a la màquina remota. `pwd` significa `print working directory`.
::: 

El primer pas per crear el parell de claus SSH serà assegurar-nos que el directori `.ssh` existeix. Per fer-ho, obriu un terminal al vostre ordinador local i escriviu la següent ordre:

```bash
mkdir .ssh
```

L'ordre pot generar un error si el directori ja existeix, això és normal, només vol dir que el directori ja estava allà. Per acostumar-nos al terminal, utilitzarem l'ordre `ls` per llistar els continguts del directori. Escriviu la següent ordre:
```bash
ls .ssh
```

No hauríeu de veure cap sortida de l'ordre, això és perquè el directori està buit. Pot ser que ja tingueu claus SSH creades, així que en aquest cas l'ordre `ls .ssh` mostrarà algunes línies llistant els fitxers a la carpeta `.ssh`.

Ara crearem el parell de claus SSH. Escriviu la següent ordre:

```bash
ssh-keygen -t rsa -f .ssh/aws-keypair
```

Se us demanarà que introduïu una contrasenya. Podeu deixar-la buida prement `Enter` dues vegades (us recomano fer-ho per simplicitat, si no, cada vegada que us connecteu a la màquina remota haureu d'introduir la contrasenya). Hauríeu de veure una sortida similar a la següent:

```
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in .ssh/aws-keypair
Your public key has been saved in .ssh/aws-keypair.pub
The key fingerprint is:
SHA256:uhINFvYaJh6MbwFQCXdZyrW7W46jFGHUhLglDgQ5OYE ferran@DESKTOP-0841
+---[RSA 3072]----+
|XBooo*+          |
|E.++*o..         |
| O ==o.          |
|. B.=...         |     
| o *.=. S        |
|  + o..o         |
| .  ..o .        |
|   .. .*         |
|    .o+..        |
+----[SHA256]-----+
```

Aquí, `ssh-keygen` és l'ordre per generar el parell de claus, `-t rsa` especifica el tipus de clau a crear, en aquest cas una clau RSA, i `-f .ssh/aws-keypair` especifica el nom del fitxer per al parell de claus. Podeu anomenar el fitxer com vulgueu, però és important recordar el nom que li heu donat. En aquest cas, l'estem anomenant `aws-keypair`. Us recomano que el nomeu igual que jo per no confondre-us més endavant.


:::{.callout-tip title="Entendre les claus SSH - Veure video"}
Es clau entendre com funcionen les claus públiques i privades i com s'utilitzen per establir una connexió SSH, **heu de veure [aquest vídeo](https://www.youtube.com/watch?v=dPAw4opzN9g)**. Tingueu en compte que suggereixen utilitzar `putty` per connectar-vos a la màquina remota quan esteu en un ordinador Windows, mentre que jo suggereixo utilitzar el terminal, com vaig dir a classe, això és una elecció personal però faré els laboratoris utilitzant el terminal així que si voleu seguir-me us recomano que feu el mateix.
:::

Una altra vegada, podem comprovar el contingut del directori `.ssh` escrivint la següent ordre:

```bash
ls .ssh
```

Hauríem de veure ara dos fitxers, `aws-keypair` i `aws-keypair.pub`. El primer és la clau privada i el segon és la clau pública. La clau privada mai s'ha de compartir amb ningú, mentre que la clau pública és la que s'ha de compartir amb la màquina remota. Una ordre útil per inspeccionar el contingut d'un fitxer és `cat`. Per exemple, per veure el contingut de la clau pública, escriviu la següent ordre:

```bash
cat .ssh/aws-keypair.pub
```

::: {.callout-note}
També podeu inspeccionar el contingut de la carpeta `.ssh` i dels fitxers que hi ha dins utilitzant l'Explorador de fitxers (o Finder en dispositius Mac). Però **tingueu cura**, per defecte, les carpetes i  fitxers que comencen amb un `.` (com `.ssh`) estan ocults en la majoria d'exploradors de fitxers i si voleu poder veure'ls, haureu d'habilitar l'opció per mostrar fitxers ocults. Consulteu [aquest tutorial](https://en.eloutput.com/Tutorials/step-by-step/show-hidden-files-windows-macos/) per veure com fer-ho al vostre sistema operatiu. Una altra cosa a tenir en compte és que les extensions de fitxer (és a dir, la part del nom del fitxer que ve després del darrer `.`) també solen estar ocultes, això vol dir que a l'Explorador de fitxers potser veieu dos fitxers anomenats `aws-keypair` quan en realitat un és `aws-keypair` i l'altre és `aws-keypair.pub`. Aquí teniu [un tutorial](https://www.gottheknack.com/a-how-to/file-systems/file-ext-and-details-view/file-ext-and-details-view.html) sobre com mostrar les extensions de fitxer al vostre sistema operatiu.

No cal que us preocupeu per res d'això si esteu utilitzant el terminal, el terminal us mostrarà els fitxers i les seves extensions tal com són. **Però per veure fitxers i carpetes ocults (aquells que comencen amb un `.`) haureu d'utilitzar l'ordre `ls -a`**.

```bash
ls -a .ssh
```
:::

Hem creat un parell de claus SSH que podem utilitzar per connectar-nos a màquines remotes. A continuació, importarem la nostra clau pública a AWS.

### Pas 4: Importació de la clau pública a AWS {#pas-4-importacio-de-la-clau-publica-a-aws}

Ara que hem creat el nostre parell de claus SSH, hem d'importar la clau pública a AWS per poder utilitzar-la per connectar-nos a les instàncies EC2 que crearem més endavant. Per fer-ho, hem de tornar al tauler d'AWS, que és on vam acabar després de completar [el Pas 2](#pas-2-acces-al-tauler-daws).

Ara anirem a la barra de cerca i buscarem el servei `EC2`. Escriviu `EC2` a la barra de cerca i feu clic al servei `EC2`, com es mostra a continuació:

![AWS Dashboard](../figs/laboratories/01-intro/searchbar.png)

Ara veureu el tauler d'EC2. A la part esquerra de la pantalla, veureu una llista d'opcions. Feu clic a `Key Pairs` (Pares de claus) i després a `Create key pair` (Crear parell de claus), com es mostra a continuació:

![AWS Dashboard](../figs/laboratories/01-intro/keypair1.png)

Ara heu de donar un nom al parell de claus. Podeu anomenar-lo com vulgueu, però us suggereixo que el anomeneu `aws-keypair` per mantenir les coses simples. Assegureu-vos que l'opció `Key type` (Tipus de clau) estigui configurada a `RSA` i que l'opció `Private key file format` (Format del fitxer de clau privada) estigui configurada a `PEM`. Això és important perquè la clau privada s'ha d'utilitzar en format PEM per connectar-se a la màquina remota. Feu clic a `Create key pair` (Crear parell de claus), com es mostra a continuació:

![AWS Dashboard](../figs/laboratories/01-intro/keypair2.png)

::: {.callout-note}

Podeu també fer clic al botó `Browse` per seleccionar el fitxer de clau pública des del vostre ordinador. Només cal que feu clic a `Browse`, navegueu fins a la carpeta `.ssh` i seleccioneu el fitxer `aws-keypair.pub`. Però recordeu, el fitxer ha de ser el fitxer de clau pública, no el fitxer de clau privada. És a dir, el fitxer ha de tenir l'extensió `.pub`. Un cop hàgiu seleccionat el fitxer, feu clic a `Import Key Pair`.

Recordeu que com s'ha explicat a la nota anterior, potser no veureu la carpeta `.ssh` a l'explorador de fitxers i potser no veureu l'extensió `.pub` del fitxer. Si teniu problemes amb això, us recomano utilitzar el terminal per copiar el contingut del fitxer com es mostra a la captura de pantalla anterior.
:::

Ara hauríeu de veure el parell de claus que acabeu d'importar a la llista de parells de claus. Probablement hi haurà un altre parell de claus allà, això està bé, podeu ignorar-lo. Perfecte! Ara heu importat la clau pública a AWS. A continuació, crearem una instància EC2 i la configurarem per utilitzar el parell de claus que acabem d'importar.

## Pas 5: Creació d'una instància EC2 {#pas-5-creacio-duna-instancia-ec2}

El primer pas serà anar al tauler d'EC2. Podeu fer-ho escrivint `EC2` a la barra de cerca i fent clic al servei `EC2`, com vam fer al principi del [Pas 3](#pas-3-importació-de-la-clau-pública-a-aws):

![AWS Dashboard](../figs/laboratories/01-intro/searchbar.png)

Un cop estigueu al tauler d'EC2, feu clic a `Instances` > `Launch Instance`, com es mostra a continuació:

![AWS Dashboard](../figs/laboratories/01-intro/ec2-1.png)

Deixeu-ho tot com està excepte l'opció `Key pair (login)` (Parell de claus (inici de sessió)) (haureu de desplaçar-vos cap avall per trobar-la). Feu clic al menú desplegable i seleccioneu el parell de claus que heu importat anteriorment. En aquest cas, hauria de ser `aws-keypair`. Feu clic a `Launch instance`, com es mostra a continuació:

![AWS Dashboard](../figs/laboratories/01-intro/ec2-2.png)

Ara tenim una instància EC2 en execució amb la nostra clau pública importada. Això significa que tenim una màquina remota a AWS a la qual podem connectar-nos des del nostre ordinador local mitjançant SSH. Vegem com fer-ho.

## Pas 6: Connexió a la instància EC2 {#pas-6-connexio-a-la-instancia-ec2}

Abans de connectar-nos a la màquina remota, vull que proveu alguns ordres al vostre ordinador local que després repetirem un cop estiguem connectats a la màquina remota. Una de les ordres és `pwd`, que significa `print working directory`, com ja s'ha comentat anteriorment. Aquesta ordre us mostrarà la ruta al directori en què esteu actualment. L'altra ordre és `whoami`, que us mostrarà el nom d'usuari amb el qual heu iniciat sessió. Proveu aquestes ordres al vostre ordinador local i recordeu-ne la sortida. Les repetirem un cop estiguem connectats a la màquina remota.

A continuació es mostra la sortida que obtinc al meu ordinador local:

```powershell
PS C:\Users\fnao> pwd

PS C:\Users\fnao> whoami
gft\fnao
PS C:\Users\fnao>
```

::: {.callout-warning}
El ordinador local que utilitzo és un portàtil amb Windows, així que la sortida serà diferent de la vostra si esteu utilitzant un Mac o un ordinador amb Linux.
Substitueix `fnao` pel vostre nom d'usuari i `C:\Users\fnao` per la ruta al vostre directori d'usuari.
:::

Per connectar-nos a la instància EC2, utilitzarem el terminal del nostre ordinador local. Així com vam fer al principi [Pas 3](#pas-3-importació-de-la-clau-pública-a-aws), obriu un terminal al vostre ordinador local. Utilitzarem l'ordre `ssh` per connectar-nos a la màquina remota. L'ordre tindrà aquest aspecte:

```bash
ssh -i .ssh/aws-keypair ec2-user@<public-ip>
``` 

Haureu de substituir `<public-ip>` per la IP pública de la instància EC2. Per trobar la IP pública, torneu al tauler d'EC2 i feu clic a `Instances` a la part esquerra de la pantalla. Veureu una llista d'instàncies, feu clic a la instància que heu creat. Veureu la IP pública a la part inferior de la pantalla com es mostra a continuació:

![AWS Dashboard](../figs/laboratories/01-intro/ec2-3.png)

Tant l'adreça `Public IPv4 address` com el `Public IPv4 DNS` es poden utilitzar com a `<public-ip>` a l'ordre `ssh`. Copieu el que preferiu i enganxeu-lo a l'ordre `ssh`. L'ordre hauria d'assemblar-se a alguna cosa així si utilitzeu l'adreça IP:

```bash
ssh -i .ssh/aws-keypair ec2-user@98.84.68.70
```

o així si utilitzeu el DNS:

```bash
ssh -i .ssh/aws-keypair ec2-user@ec2-98-84-68-70.compute-1.amazonaws.com
```

Si és la primera vegada que us connecteu a la màquina remota, obtindreu una advertència. Això és normal, només heu d'escriure `yes` i prémer `Enter`. Ara hauríeu de estar connectats a la màquina remota. Veureu un missatge similar al següent:

```
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Sun Mar  2 09:50:33 2025 from 79.156.58.43
[ec2-user@ip-172-31-86-82 ~]$
```

::: {.callout-tip title="Exercici"}
Investiga quin és el significat i la importànica del missatge que acceptes quan et connectes per primera vegada a la màquina remota. Per què és important acceptar aquest missatge? Què significa? Quines implicacions té?
:::

Fantàstic! Ara esteu connectats a la màquina remota. És important entendre que a partir d'ara, les ordres que escrivim s'executaran a la màquina remota, no al nostre ordinador local. Per comprovar-ho, escriviu les ordres `pwd` i `whoami` com vam fer al nostre ordinador local. Veureu que la sortida és diferent. A continuació es mostra la sortida que obtinc a la màquina remota:

```bash
[ec2-user@ip-172-31-86-82 ~]$ pwd
/home/ec2-user
[ec2-user@ip-172-31-86-82 ~]$ whoami
ec2-user
[ec2-user@ip-172-31-86-82 ~]$
```

::: {.callout-note}
Aquesta vegada la sortida hauria de ser la mateixa que la meva. Observeu que el prompt `[ec2-user@ip-172-31-86-82 ~]$` és diferent, però això no forma part de les sortides de les ordres. Les sortides de les ordres són `pwd` i `whoami`, que són `home/ec2-user` i `ec2-user` respectivament. El prompt és només una manera de mostrar-vos on esteu al sistema de fitxers i qui sou com a usuari connectat.
:::


::: {.callout-tip title="Exercici"}

Utilitza la comanada `lastlog` i investiga com administrador com podem trueure partit d'aquesta informació.

:::

## Execució en el nostre laboratori remot {#execucio-en-el-nostre-laboratori-remot}

En aquest apartat de laboratori, treballarem la comunicació amb servidors remots i la transferència de fitxers entre la màquina local i la màquina remota. Utilitzarem un script de Python per simular una càrrega de treball i generar un gràfic a partir d'un fitxer de dades. Aquest laboratori es durà a terme a la instància EC2 que hem creat anteriorment.

### Pas 1: Configuració de l'entorn remot a l'EC2 {#pas-1-configuracio-de-lentorn-remot-a-lec2}

Primer, hem de preparar l'entorn a la nostra instància EC2. Això inclou instal·lar les eines necessàries per executar el nostre script de Python i gestionar les dades. Per tant, ens connectarem a la instància EC2 mitjançant SSH com hem fet anteriorment i executarem les següents ordres per instal·lar les eines necessàries.

```bash
# Connecta't a la instància EC2
ssh -i .ssh/aws-keypair ec2-user@<public-ip>
```

1. Actualització del sistema:

  ```bash
  sudo yum update -y
  ```

2. Comprova si tens instal·lat Git i, si no, instal·la'l:

  ```bash
  git --version # Comprova si Git està instal·lat
  sudo yum install git -y # Instal·la Git si no està instal·lat
  ```

3. Comprova si tens instal·lat Python i, si no, instal·la'l:

  ```bash
  python3 --version # Comprova si Python està instal·lat
  sudo yum install python3 -y # Instal·la Python si no està instal·lat
  ```

4. Crea un entorn virtual per a Python:

  ```bash
  python3 -m venv myenv
  source myenv/bin/activate
  ```

5. Comprova l'entorn virtual amb un `Hello World`:

```bash
python3 -c "print('Hello World from the virtual environment!')"
  ```

::: {.callout-tip title="Exercici"}
Ara utiltiza la comanda `exit` per sortir de la màquina remota. Un cop al teu ordinador local, torna a connectar-te a la màquina remota amb SSH i torna a executar la comanda `python3 -c "print('Hello World from the virtual environment!')"`. Quin és el resultat? Per què és diferent del que has obtingut abans? Com ho podem solucionar?
:::

6. Instal·la les biblioteques necessàries per al nostre script:

  ```bash
  pip install pandas matplotlib psutil
  ```

7. Descarrega el següent repositori de Git que conté un programa amb python per simular una càrrega de treball i generar un gràfic:

  ```bash
  git clone xxxxx
  ```

8. Entra al directori del projecte:

  ```bash
  cd lab01-workload-simulation
  ```

9. Comprova que el fitxer `simulate_workload.py` està al directori:

  ```bash
  ls -l simulate_workload.py
  ```

10. Si el fitxer existeix, pots executar-lo amb la següent ordre:

  ```bash
  python3 simulate_workload.py workload.csv
  ```

Ens falta un fitxer de dades per executar el script. Aquest fitxer de dades hauria de contenir informació sobre l'ús de la CPU i la memòria en format CSV. Crearem aquest fitxer a la nostra màquina local i el pujarem a la instància EC2:

Descarrega't aquest fitxer de dades [workload.csv](https://raw.githubusercontent.com/el-teu-nom-d-usuari/lab-workload-simulation/main/workload.csv) i desa'l a la carpeta on tens el teu repoitori de treball remot. Per fer-ho podem utilitzar la comanda `sftp` per transferir fitxers entre la màquina local i la màquina remota.

El primer serà obrir una terminal local a la carpeta descarregues o a la carpeta on hagi guardat el fitxer `workload.csv`, si feu `ls` haureu de veure el fitxer `workload.csv` a la llista de fitxers. Ara, per pujar el fitxer a la màquina remota, utilitzarem SFTP (SSH File Transfer Protocol). Això ens permetrà transferir fitxers de manera segura entre la nostra màquina local i la instància EC2.

```bash
# Connecta't a la instància EC2 amb SFTP
sftp -i .ssh/aws-keypair ec2-user@<public-ip>:ruta/al/teu/repo
```

Un cop connectats, a la màquina remota al directori on vulguis pujar el fitxer, utilitza l'ordre `put` per pujar el fitxer `workload.csv`:

```bash
put workload.csv
```

Després de pujar el fitxer, podeu sortir de la sessió SFTP amb l'ordre `exit`.

## Pas 2: Execució del script i generació de la imatge {#pas-2-execucio-del-script-i-generacio-de-la-imatge}

Ara que tenim el fitxer de dades a la instància EC2, podem executar el script de Python per simular la càrrega de treball i generar un gràfic. Tornarem a connectar-nos a la instància EC2 mitjançant SSH i executarem el script:

```bash
# Ens situem al directori del projecte
cd lab-workload-simulation
# Assegura't que el fitxer de dades és allà
ls -La
# Executa l'script de Python
python3 simulate_workload.py workload.csv
```

Un cop executat, el script hauria de generar un fitxer d'imatge (per exemple, `workload_analysis.png`) al mateix directori. Aquest fitxer contindrà un gràfic que mostra l'ús de la CPU i la memòria al llarg del temps. Podem comprovar que el fitxer d'imatge s'ha creat correctament amb l'ordre `ls`:

```bash
ls -l workload_analysis.png
workload_analysis.png
```

## Pas 3: Transferència de la imatge a la màquina local {#pas-3-transferencia-de-la-imatge-a-la-maquina-local}

Ara que tenim el gràfic generat a la instància EC2, volem transferir-lo a la nostra màquina local per poder-lo visualitzar. Tornarem a utilitzar SFTP per baixar el fitxer d'imatge.

```bash
# Connecta't a la instància EC2 amb SFTP
sftp -i .ssh/aws-keypair ec2-user@<public-ip>:ruta/al/teu/repo

# Utilitza l'ordre `get` per baixar el fitxer d'imatge
get workload_analysis.png
```

Un cop baixat, podeu sortir de la sessió SFTP amb l'ordre `exit`.

::: {.callout-tip title="Exercici"}
Investiga com podem baixar de cop tots els fitxers d'un directori remot a la màquina local utilitzant SFTP. Com ho faries si vols baixar tots els fitxers del directori `lab-workload-simulation` a la teva màquina local?
:::


## Tasques bàsqiques d'administració {#tasques-basiques-dadministracio}

En aquest apartat, explorarem alguns problemes simples d'administració que podem trobar en un servidor i veure'm el seu impacte. 

Amb la comanda `df -h` podem veure l'espai en disc disponible i utilitzat a les particions del sistema. Aquesta comanda ens mostrarà informació sobre l'espai en disc de cada partició, incloent-hi la mida total, l'espai utilitzat, l'espai disponible i el punt de muntatge. En aquest curs estudiarem el sistema de fitxers en profunditat, però ara només introduirem la comanda i veurem el seu resultat.

A més, també podem utilitzar la comanda `du` per veure l'espai en disc utilitzat per un directori específic. Per exemple, si volem veure l'espai en disc utilitzat pel directori `/home/ec2-user`, podem utilitzar la comanda següent:

```bash
du -sh /home/ec2-user
```

Aquesta comanda ens mostrarà l'espai en disc utilitzat pel directori `/home/ec2-user` i tots els seus subdirectoris. L'opció `-s` indica que volem un resum de l'espai utilitzat, i l'opció `-h` mostra la sortida en un format llegible per humans (per exemple, en KB, MB, GB).

Podem crear un fitxer de prova per veure com afecta l'espai en disc. Per exemple, podem crear un fitxer de text gran amb la comanda `dd`:

```bash
dd if=/dev/zero of=largefile.txt bs=1M count=100
```

Aquesta comanda crearà un fitxer anomenat `largefile.txt` de 100 MB ple de zeros. Ara podem tornar a executar la comanda `df -h` per veure com ha canviat l'espai en disc disponible.

Per eliminar el fitxer que hem creat, podem utilitzar la comanda `rm`:

```bash
rm largefile.txt
```

Crea un fitxer el suficientment gran per omplir l'espai disponible al teu directori d'usuari. [@TODO: Explicar com fer-ho amb `fallocate` o `truncate` i revisar la mida de la màquina virtual]

@IDEA Fer un test per veure com no et deixa connectar-te a la màquina remota quan no hi ha prou espai disponible. Podem fer-ho a tmp i aixi amb el reboot podem veure com es buida el directori `/tmp` i podem tornar a connectar-nos.


Després el hi farem executar sense explicar `for i in $(seq 1 1000000); do touch fitxer_$i; done` i fer que intentin despres crear un directori, investiga que passa i per què no es pot crear un directori nou.


## Entrega del laboratori {#entrega-del-laboratori}



