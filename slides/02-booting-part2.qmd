---
title: "Arrencada del sistema (Part 2)"
subtitle: "Unitat 2 ¬∑ Administraci√≥ i Manteniment de Sistemes i Aplicacions (AMSA)"
author: "Jordi Mateo Forn√©s"
logo: "/figs/corporative/institute.png"
format: 
  revealjs:
    transition: fade
    slide-number: true
    incremental: true 
    chalkboard: false
    css: styles.css
    footer: "Unitat 2 ¬∑ Administraci√≥ i Manteniment de Sistemes i Aplicacions (AMSA) [üè†](/index.html)</a>"
editor: visual

execute:
  freeze: auto
  echo: false
---

## Etapes de l'arrancada

![](../figs/slides/02-booting/linux-unix-booting-process.png)

## Qu√® √©s el GRUB/GRUB2? {.smaller}

**GRUB** (*GRand Unified Bootloader*) √©s un gestor d'arrencada molt utilitzat en sistemes operatius Linux i altres sistemes Unix-like. La seva funci√≥ principal √©s carregar un kernel del sistema operatiu a la mem√≤ria i iniciar el proc√©s d'arrencada.

-   **Funcions principals**:
    -   Permet seleccionar entre m√∫ltiples sistemes operatius instal¬∑lats en un mateix ordinador (multi-boot).
    -   Proporciona una interf√≠cie per configurar opcions d'arrencada, com ara par√†metres del kernel.
    -   Suporta diferents sistemes de fitxers, permetent accedir a particions amb formats com ext4, Btrfs, XFS, entre altres.
    -   Ofereix una consola interactiva per a la resoluci√≥ de problemes i la configuraci√≥ avan√ßada.

## Etapes d'execuci√≥ del GRUB {.smaller}

-   **Stage 1**:
    -   En sistemes BIOS: efectivament √©s el codi al MBR (o VBR) ‚Üí molt petit (‚â§ 446 bytes).
    -   En sistemes UEFI: √©s un fitxer executable EFI (normalment a /boot/efi/EFI/grub/grubx64.efi).
-   **Stage 1.5** (nom√©s en BIOS, opcional):
    -   Proporciona suport b√†sic per a sistemes de fitxers.
    -   Normalment es troba en sectors buits despr√©s del MBR (espai entre MBR i primera partici√≥). *core.img*.
-   **Stage 2**:
    -   Cont√© el GRUB complet amb el men√∫ d'arrencada.
    -   Pot carregar m√≤duls addicionals (drivers de FS, v√≠deo, xarxa, criptografia...).
    -   Transfereix el control al kernel per iniciar el sistema operatiu.

## Diagrama d'arrencada del GRUB {.smaller}

![](../figs/slides/02-booting/grub.png)

-   **set root='hd0,msdos1'**: Indica la partici√≥ arrel on es troba el sistema operatiu que es vol arrencar.
-   **linux /vmlinuz root=/dev/sda1**: Indica la ruta del kernel i la partici√≥ arrel.
-   **initrd /initramfs.img**: Indica la ruta de l'initramfs.
-   **boot**: Inicia el sistema operatiu.

## Configuraci√≥ del GRUB (I) {.smaller}

El fitxer principal de configuraci√≥ de **GRUB2** √©s:\
- `/boot/grub/grub.cfg` (o `/boot/grub2/grub.cfg` en algunes distribucions).

::: {.callout-warning title="Important"}
**No s‚Äôha d‚Äôeditar directament**, ja que es regenera autom√†ticament.
:::

### Fitxers i directoris

-   **`/etc/default/grub`** : Opcions generals de configuraci√≥ i variables d'entorn.
-   **`/etc/grub.d/`**\
    Directori amb scripts que generen `grub.cfg`:
    -   `00_header` ‚Üí configuraci√≥ inicial\
    -   `10_linux` ‚Üí detecta kernels Linux\
    -   `30_os-prober` ‚Üí detecta altres SO\
    -   `40_custom` ‚Üí entrades personalitzades

## Configuraci√≥ del GRUB (II)

Un cop modificats els fitxers anteriors, cal regenerar `grub.cfg`:

``` bash
# Distribucions Debian/Ubuntu
sudo update-grub

# Distribucions Arch, Fedora, openSUSE...
sudo grub-mkconfig -o /boot/grub/grub.cfg
```

## Variables `/etc/default/grub` {.smaller}

| Variable | Descripci√≥ |
|----------------------|--------------------------------------------------|
| `GRUB_BACKGROUND` | Imatge de fons que es mostrar√† al men√∫ d'arrencada. |
| `GRUB_TIMEOUT` | Temps en segons abans de carregar l'entrada predeterminada. |
| `GRUB_DEFAULT` | Entrada per defecte que es carregar√† (index o nom) |
| `GRUB_CMDLINE_LINUX` | Opcions de l√≠nia de comandes que es passen al nucli en arrencar el sistema. |
| `GRUB_DISABLE_RECOVERY` | Si **true**, desactiva les opcions de mode de recuperaci√≥. |
| `GRUB_DISABLE_OS_PROBER` | Si **true**, impedeix que GRUB busqui altres sistemes operatius instal¬∑lats. |
| `GRUB_PRELOAD_MODULES` | Llista de m√≤duls GRUB que es carregaran abans de mostrar el men√∫ d'arrencada. |

## Par√†metres del kernel m√©s comuns {.smaller}

| Par√†metre | Descripci√≥ |
|----------------------|--------------------------------------------------|
| `quiet` | Suprimeix els missatges del nucli durant l'arrencada. |
| `single` | Inicia el sistema en mode d'usuari √∫nic (single-user mode) per a tasques de manteniment. |
| `nomodeset` | Desactiva la detecci√≥ de modes de v√≠deo, √∫til per a solucions de problemes amb gr√†fics. |
| `root=` | Especifica la partici√≥ arrel del sistema de fitxers. |
| `init=` | Especifica un fitxer d'init alternatiu. |
| `ro` | Muntatge de la partici√≥ arrel en mode de nom√©s lectura durant l'arrencada. |
| `rw` | Muntatge de la partici√≥ arrel en mode de lectura i escriptura durant l'arrencada. |
| `systemd.unit =` | Especifica el target de systemd a iniciar (ex: `multi-user.target`, `graphical.target`). |

## Consideracions addicionals

-   En UEFI, GRUB2 √©s un fitxer EFI a /boot/efi/EFI/<distro>/grubx64.efi.
-   Es poden protegir entrades amb contrasenya a /etc/grub.d/40_custom.
-   Al men√∫, amb `e` es poden passar par√†metres temporals al kernel.
-   GRUB permet *chainloading* per arrencar altres SO (Windows, BSD).
-   Amb UEFI Secure Boot, GRUB pot ser signat digitalment.

## Secure Boot {.smaller}

**Secure Boot** √©s una caracter√≠stica de seguretat del firmware UEFI que assegura que nom√©s es carregui i s'executi programari de confian√ßa durant el proc√©s d'arrencada del sistema.

-   UEFI comprova la signatura digital del bootloader EFI (per exemple, grubx64.efi) abans de carregar-lo.
-   La signatura √©s comparada amb les claus de confian√ßa emmagatzemades en la DB (Database of allowed signatures) del firmware.
-   Si la signatura √©s v√†lida, UEFI carrega i executa el bootloader. Sin√≥, impedeix l‚Äôexecuci√≥ del bootloader i mostra un missatge d‚Äôerror.
-   Pot carregar m√≤duls addicionals signats, que tamb√© poden ser verificats pel mateix GRUB (*opcional*).
-   El kernel Linux tamb√© pot estar signat (*opcional*, si s‚Äôutilitza Linux Kernel Signing).
-   Si s‚Äôutilitza [Shim](http://github.com/rhboot/shim), aquest actua com a intermediari: el firmware UEFI confia en Shim, i Shim verifica despr√©s GRUB i el kernel.

## Problemes de Secure Boot {.smaller}

-   **Compatibilitat**: No tots els sistemes operatius o distribucions Linux suporten Secure Boot de manera nativa.
-   **Claus de confian√ßa**: La gesti√≥ de claus pot ser complexa, especialment en entorns corporatius.
-   **Actualitzacions**: Les actualitzacions del bootloader o del kernel poden requerir la re-signatura dels components.
-   **Restriccions**: Algunes funcionalitats avan√ßades poden estar limitades per les pol√≠tiques de Secure Boot.

Malgrat Secure Boot, s‚Äôhan detectat vulnerabilitats que permeten carregar bootloaders no autoritzats en alguns dispositius ([ArsTechnica, 2024](https://arstechnica.com/security/2024/07/secure-boot-is-completely-compromised-on-200-models-from-5-big-device-makers/?s=31)).

# Inici del sistema operatiu

## Qu√® √©s el kernel? {.smaller}

El **kernel** √©s el nucli del sistema operatiu, *responsable de gestionar els recursos del sistema, com la mem√≤ria, el processador, els dispositius d'entrada/sortida, la xarxa i els processos d'usuari*.

:::::: columns
:::: {.column width="50%"}
::: center-container
![](../figs/slides/02-booting/kernel.png)
:::
::::

::: {.column width="50%"}
-   El kernel es carrega a la mem√≤ria RAM durant el proc√©s d'arrencada i es troba normalment a la partici√≥ arrel del sistema de fitxers (generalment en **/boot**).

-   El **kernel** √©s un programa binari que es compila espec√≠ficament per a l'arquitectura de maquinari del sistema (per exemple, x86, ARM, etc.)

-   Pot ser personalitzat amb diferents m√≤duls i controladors segons les necessitats del sistema.
:::
::::::

## Carregar el kernel {.smaller}

Per carregar el kernel, el bootloader necessita:

1.  **Ruta del kernel**
    -   Normalment un fitxer com **vmlinuz-version** dins de `/boot`.
2.  **Partici√≥ arrel**
    -   La partici√≥ on es troba el sistema de fitxers del sistema operatiu.
3.  **Fitxer de configuraci√≥ del bootloader**
    -   Com **grub.cfg** en el cas de GRUB, que indica ruta del kernel, par√†metres i initramfs.
4.  **C√†rrega de l‚Äôinitramfs**
    -   **Initramfs** (*initial RAM filesystem*) √©s un sistema de fitxers temporal a RAM.\
    -   Permet inicialitzar controladors b√†sics i muntar la partici√≥ arrel real abans de transferir el control al kernel complet.

::: notes
L‚Äôinitramfs facilita la portabilitat i modularitat del kernel, permetent arrencar diferents configuracions de maquinari sense necessitat de recompilar el kernel cada cop.
:::

# Initramfs o initrd

## Qu√® √©s l'Initramfs? {.smaller}

L‚Äô**Initramfs** (*Initial RAM Filesystem*) √©s un petit sistema de fitxers integrat dins la imatge del nucli Linux.

-   Permet que el kernel pugui muntar la **partici√≥ arrel** durant l‚Äôarrencada.\
-   A difer√®ncia de l‚Äôantic **initrd**, que residia en un disc, l‚Äôinitramfs es carrega completament a **RAM com a imatge comprimida**.

::: fragment
### Objectius

-   Proporcionar un **sistema de fitxers temporal i m√≠nim**.\
-   Carregar **m√≤duls essencials del kernel** necessaris per accedir a maquinari i sistemes de fitxers.\
-   Executar scripts d‚Äôinicialitzaci√≥ abans de transferir el control al sistema complet.
:::

## Etapes de l'Initramfs (I) {.smaller}

1.  **Descompressi√≥ a la RAM**
    -   El fitxer CPIO de l'initramfs es descomprimeix a un sistema de fitxers temporal a RAM (`tmpfs`), creant l‚Äôentorn m√≠nim necessari per iniciar el kernel.\
2.  **Execuci√≥ de l‚Äôscript `/init`**
    -   `/init` √©s l‚Äôentrypoint principal de l‚Äôinitramfs.\
    -   Executa la seq√º√®ncia d‚Äôinicialitzaci√≥: muntatge de sistemes virtuals, c√†rrega de m√≤duls i preparaci√≥ de l‚Äôentorn.\
3.  **Creaci√≥ del sistema de fitxers temporal**
    -   Muntatge de `/proc`, `/sys` i `/dev`.\
    -   Creaci√≥ de directoris temporals (`/tmp`, `/run`) per permetre que els scripts i utilitats funcionin.

## Etapes de l'Initramfs (II) {.smaller}

4.  **Carregar m√≤duls del kernel**
    -   Carrega controladors necessaris per accedir a maquinari (discos, controladors de xarxa, LVM, RAID, xifrat).\
    -   Si els m√≤duls estan integrats al kernel, aquesta etapa pot ser m√≠nima o nul¬∑la.
5.  **Muntatge de la partici√≥ arrel real**
    -   Localitza la partici√≥ arrel (per exemple `/dev/sda1` o `UUID=...`).\
    -   Muntatge en un punt temporal (`/mnt/root` o similar).\
6.  **Transici√≥ al sistema complet (`switch_root`)**
    -   Substitueix l‚Äôentorn temporal de l‚Äôinitramfs pel sistema de fitxers real.\
    -   Executa el binari `init` del sistema complet (normalment `/sbin/init` o systemd).\

## Etapes de l'Initramfs (III) {.smaller}

7.  **Alliberament de l‚Äôinitramfs**
    -   Destruir l‚Äôentorn temporal a RAM.\
    -   Alliberar la mem√≤ria utilitzada pel sistema de fitxers temporal, deixant el control complet al sistema operatiu.

## Caracter√≠stiques de l'Initramfs {.smaller}

-   Facilita la portabilitat i modularitat del kernel, permetent arrencar diferents configuracions de maquinari sense necessitat de recompilar el kernel cada cop.
-   No sempre est√† present, pot estar buit o om√®s si el sistema no necessita un espai RAM inicial (per exemple, en sistemes simples o compilacions est√†tiques del nucli).
-   Es configura durant la compilaci√≥ del nucli `make menuconfig` i es pot definir el contingut de l'**initramfs** amb un fitxer de configuraci√≥, s'utiltizen variables:
    -   **CONFIG_BLK_DEV_INITRD**: Activa la creaci√≥ de l'**initramfs**.
    -   **CONFIG_INITRAMFS_SOURCE**: Especifica el fitxer CPIO, un directori o un fitxer d'especificaci√≥.
-   Tamb√© es pot personalitzar segons les necessitats del sistema, permetent afegir **m√≤duls del kernel, scripts personalitzats o utilitats addicionals**.

## Contingut de l'initramfs {.smaller}

1.  **Fitxers executables**
    -   Ex: **BusyBox**, que encapsula moltes utilitats Unix (`ls`, `cp`, `mount`, shell, etc.).\
    -   Poden incloure altres programes compilats est√†ticament.
2.  **M√≤duls del kernel**
    -   Controladors per discos, xarxes, sistemes RAID o LVM.\
    -   S√≥n carregats si no estan integrats dins del nucli.
3.  **Fitxers de dispositiu i sistemes especials**
    -   `/dev` cont√© dispositius com `tty` o `null`.\
    -   Gestionats per utilitats com **mdev** o **udev**.

::: {.fragment .center-container}
Tots aquests elements es troben **comprimits en un fitxer CPIO**, descomprimits a RAM durant l‚Äôarrencada i executats per l‚Äôscript `/init`.
:::

## Configuraci√≥ de l'initramfs {.smaller}

L'**initramfs** es pot personalitzar segons les necessitats del sistema, permetent afegir **m√≤duls del kernel, scripts personalitzats o utilitats addicionals**. La configuraci√≥ dep√®n de la distribuci√≥:

### Debian/Ubuntu

``` bash
update-initramfs -u -k <versi√≥>
# -u actualitza l'initramfs
# -k especifica la versi√≥ del nucli
```

<br>

### Fedora/Red Hat

``` bash
dracut -f /boot/initramfs-<versi√≥>.img <versi√≥>
# -f for√ßa la regeneraci√≥
# El primer argument √©s la ruta on es vol guardar l'initramfs generat
# El segon argument √©s la versi√≥ del nucli
```

## `initramfs-tools` (Debian) (I) {.smaller}

-   **`/etc/initramfs-tools/modules`**\
    Llista de **m√≤duls addicionals** del kernel a incloure a l‚Äôinitramfs, per exemple controladors de xarxa o discos RAID.\
-   **`/etc/initramfs-tools/hooks/`**\
    Scripts que s‚Äôexecuten **durant la creaci√≥** de l‚Äôinitramfs, √∫tils per afegir fitxers o directoris personalitzats.\
-   **`/etc/initramfs-tools/conf.d/`**\
    Fitxers de configuraci√≥ addicionals per modificar par√†metres espec√≠fics de l‚Äôinitramfs.\
-   **`/etc/initramfs-tools/initramfs.conf`**\
    Configuraci√≥ principal, inclou opcions com compressi√≥, √∫s de scripts, par√†metres de muntatge.\
-   **`/usr/share/initramfs-tools/`**\
    Scripts i fitxers est√†ndard utilitzats per initramfs-tools, no modificats normalment.

## `initramfs-tools` (Debian) (II) {.smaller}

-   **`/etc/initramfs-tools/scripts/`**\
    Scripts que s‚Äôexecuten **durant l‚Äôarrencada**:
    -   **`init-top/`** ‚Üí scripts executats **just despr√©s de descomprimir l‚Äôinitramfs** i abans de muntar `/proc`, `/sys` i `/dev`. Ideal per inicialitzar serveis cr√≠tics o preparar dispositius especials.\
    -   **`init-bottom/`** ‚Üí scripts executats **just abans de fer `switch_root`** al sistema complet. √ötil per passos finals com muntar la partici√≥ arrel, desbloquejar LUKS o activar LVM.\
    -   **`local-bottom/`** ‚Üí scripts addicionals definits per l‚Äôadministrador.
    -   **`local-top/`** ‚Üí scripts addicionals definits per l‚Äôadministrador.

## `initramfs-tools` (Debian) (II) {.smaller}

-   **`premount/`** ‚Üí scripts executats **abans de muntar la partici√≥ arrel**. Ideal per preparar dispositius o sistemes de fitxers especials.
-   **`mount/`** ‚Üí scripts executats **durant el muntatge de la partici√≥ arrel**. √ötil per passos espec√≠fics relacionats amb el muntatge.
-   **`cleanup/`** ‚Üí scripts executats **despr√©s de fer `switch_root`** al sistema complet. Ideal per netejar recursos temporals o realitzar tasques posteriors a l‚Äôarrencada.

## `dracut` (Fedora/Red Hat) {.smaller}

-   **`/etc/dracut.conf`**\
    Fitxer de configuraci√≥ principal de Dracut, on es poden definir opcions generals: compressi√≥, tipus de fitxer d‚Äôinitramfs, par√†metres del kernel, etc.\
-   **`/etc/dracut.conf.d/`**\
    Fitxers de configuraci√≥ addicionals, √∫tils per a configuracions espec√≠fiques de m√≤duls o projectes.\
-   **`/usr/lib/dracut/modules.d/`**\
    Cont√© **m√≤duls est√†ndard** de Dracut (ex: m√≤duls de xarxa, lvm, cryptsetup), carregats autom√†ticament segons la configuraci√≥.\
-   **`/etc/dracut/modules.d/`**\
    M√≤duls personalitzats creats per l‚Äôadministrador, per afegir scripts o fitxers espec√≠fics.\
-   **`/usr/share/dracut/`**\
    Cont√© scripts i fitxers est√†ndard utilitzats durant la generaci√≥ de l‚Äôinitramfs, igual que a initramfs-tools.

## Quan regenerar l'initramfs? {.smaller}

-   **Actualitzaci√≥ del nucli**: Quan es *compila o instal¬∑la un nou kernel*, l'initramfs associat ha de ser regenerat per garantir que carrega correctament els m√≤duls i el maquinari necessari.
-   **Configuraci√≥ RAID**: Si es modifiquen o s'afegeixen sistemes *RAID*, l'initramfs ha de reflectir aquests canvis per assegurar un arrencada correcta.
-   **Xifrat de discos**: Per a sistemes amb particions xifrades (*LUKS*), cal actualitzar l'initramfs despr√©s de canvis en la configuraci√≥ de xifrat per poder accedir a les particions durant l'arrencada.
-   **Configuraci√≥ de xarxa**: Si es canvien components de xarxa que s'utilitzen en el proc√©s d'arrencada (*sistemes amb arrencada PXE*).

## Cas d'us: USB amb clau de desxifrat {.smaller}

Un cas d'√∫s com√∫ de l'**initramfs** √©s en sistemes amb **particions xifrades amb LUKS** que utilitzen una **clau emmagatzemada en un dispositiu USB** per desxifrar la partici√≥ arrel durant l'arrencada.

::::: columns
::: {.column width="40%"}
1.  Munti els sistemes virtuals necessaris (`/proc`, `/sys`).\
2.  Munti la unitat USB que cont√© la clau.\
3.  Llegeixi la clau i desxifri la partici√≥ LUKS.\
4.  Activar volums LVM si cal.\
5.  Muntar la partici√≥ arrel i transferir el control amb `switch_root`.
:::

::: {.column width="60%"}
``` bash
#!/bin/busybox sh
mount -t proc proc /proc
mount -t sysfs sys /sys
mount /dev/sdb1 /mnt
KEYFILE=/mnt/keyfile
cryptsetup luksOpen /dev/sda1 crypted --key-file $KEYFILE
echo "Retira el dispositiu USB i prem Enter per continuar."
read
vgchange -a y
mount /dev/mapper/vg-root /mnt
exec switch_root /mnt /sbin/init
```
:::
:::::

## Exercicis Propostas

-   [Modificant la contrasenya de l'usuari root a trav√©s del GRUB](../exercises/02-booting/04-ex-week3.qmd)
-   [Desxifrat autom√†tic mitjan√ßant clau en disc secundari (USB emulat)](../exercises/02-booting/05-ex-week3.qmd)
-   Discussi√≥: [**Secure Boot √©s realment segur?**](https://github.com/amsa-gei-udl-2526-105013/course/issues/3): Cerca not√≠cies recents sobre Secure Boot i comparteix-les al f√≤rum del curs. Debatiu sobre avantatges, desavantatges, vulnerabilitats conegudes i experi√®ncies personals.


## That's all

::::::: columns
:::: {.column width="45%"}
::: {.callout-note title="Take Home Message"}
El proc√©s d'arrencada √©s un proc√©s complex. Els administradors de sistemes han de con√®ixer aquest proc√©s per poder gestionar i solucionar problemes durant l'arrencada del sistema i garantir un sistema segur, estable i eficient.
:::
::::

::: {.column width="5%"}
:::

::: {.column width="50%"}
![](https://static.posters.cz/image/750/posters/looney-tunes-thats-all-folks-i295.jpg){width="70%"}
:::
:::::::