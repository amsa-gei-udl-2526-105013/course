---
title: Desplegament d'una aplicaci√≥ web amb alta disponibilitat amb AWS
subtitle: Laboratoris Pr√†ctics d'Administraci√≥ de Sistemes i Aplicacions
lang: ca
---

En aquest laboratori intensiu, dissenyarem i implementarem una arquitectura de xarxa robusta i segura per allotjar una aplicaci√≥ de WordPress. L'arquitectura es basa en la separaci√≥ de capes (**p√∫blica, aplicaci√≥, dades**) i l'√∫s de **Zones de Disponibilitat (AZ)** per garantir que el nostre WordPress sigui altament disponible i resistent a fallades.


- **Inst√†ncies EC2 (WordPress)**: Distribu√Ødes en subxarxes privades de diferents AZs, accessibles nom√©s a trav√©s del Balancejador de C√†rrega, mai directament des d'Internet.
- **Base de Dades RDS (MySQL)**: Servei gestionat d'alta disponibilitat, tamb√© en subxarxes privades dedicades.
- **DMZ**: Una inst√†ncia EC2 en una subxarxa p√∫blica que actuar√† com a punt d'acc√©s segur (mitjan√ßant t√∫nel SSH) per a la gesti√≥ de tots els recursos privats.
- **Load Balancer**: El punt d'entrada p√∫blic que assegura la distribuci√≥ uniforme del tr√†fic a les inst√†ncies de WordPress.

## Diagrama de l'Arquitectura

![Esquema de components, conexions i elements de l'arquitectura](../../figs/laboratories/03-aws-wp/wordpress/infra.png) 

La imatge mostra com a trav√©s d'internet, els usuaris accedeixen al Load Balancer, que distribueix el tr√†fic a les inst√†ncies EC2 que allotgen WordPress. Aquestes inst√†ncies es connecten a la base de dades RDS per gestionar el contingut de WordPress. La inst√†ncia EC2 en la DMZ permet l'acc√©s segur per a l'administraci√≥ dels recursos privats.

## Objectius

- Dissenyar i implementar una arquitectura de xarxa segura i altament disponible a AWS.
- Configurar VPCs, subxarxes, taules de rutes i grups de seguretat.
- Configurar una VPN segura per a l'acc√©s administratiu.
- Configurar un load balancer per distribuir el tr√†fic a les inst√†ncies EC2.

## Requeriments Pr√®vis

- Acc√©s al curs AWS Academy Learner Lab.
- Completar el laboratori [Desplegament d'una aplicaci√≥ web amb AWS](../01-foundations/02-aws-wordpress.qmd) per entendre els conceptes b√†sics d'AWS i la configuraci√≥ inicial de WordPress.

## VPC i Subxarxes

El primer pas en la nostra arquitectura √©s definir una VPC (Virtual Private Cloud) i les subxarxes necess√†ries per a√Øllar els diferents components de l'aplicaci√≥. La VPC proporcionar√† un entorn de xarxa virtualitzat on podrem desplegar els nostres recursos d'AWS. La configurarem amb la xarxa **10.0.0.0/16**, la qual ens proporciona fins a 65.536 adreces IP, m√©s que suficients per al nostre cas d'√∫s.

:::{.callout-note title="CIDR, Hosts i Adreces Reservades üß†"}
La m√†scara de subxarxa determina el nombre d'adreces IP disponibles dins d'una xarxa o subxarxa. Aix√≤ s'expressa mitjan√ßant la Notaci√≥ CIDR (Classless Inter-Domain Routing), on el valor (/n) indica la quantitat de bits reservats per a la part de Xarxa. Una m√†scara de subxarxa de */16* significa que els primers 16 bits de l'adre√ßa IP estan reservats per a la identificaci√≥ de la xarxa, deixant els altres 16 bits per a la identificaci√≥ dels hosts. Aix√≤ permet tenir fins a 65.536 adreces IP ($2^{32-16}$) dins d'aquesta xarxa.

Quan feu el Subnetting per crear subxarxes dins de la vostra VPC, esteu augmentant el valor CIDR (per exemple, de /16 a /24), per tal de reduir la mida de les subxarxes i a√Øllar millor el tr√†fic. Per exemple, una subxarxa amb CIDR /24 t√© 256 adreces IP ($2^{32-24}$).

Recordeu que el total d'adreces calculat no √©s el total d'adreces √∫tils per als vostres servidors (hosts). Algunes adreces es reserven per a usos especials, com identificar la xarxa i la difusi√≥ (broadcast).
:::

Podem definir la VPC a trav√©s de la interf√≠cie web d'AWS, utilitzant els formularis disponibles:

![Definici√≥ de la VPC utilitzant AWS](../../figs/laboratories/03-aws-wp/wordpress/vpc.png)


### Creaci√≥ de les subxarxes

A continuaci√≥, afegirem les subxarxes necess√†ries per a la nostra arquitectura.  Aneu a **VPC** ‚Üí **Subnets** ‚Üí **Create subnet**. Seleccioneu la VPC que acabem de crear i afegiu les subxarxes seg√ºents:

- **AMSA-DMZ-01**: Subxarxa p√∫blica a la zona **us-east-1a**. Aquesta subxarxa allotjar√† la inst√†ncia EC2 que far√† de pont segur d'acc√©s (mitjan√ßant t√∫nel SSH) per a la gesti√≥ de tots els recursos privats. *(10.0.1.0/24)*.

- **AMSA-DMZ-02**: Subxarxa p√∫blica a la zona **us-east-1b**. Aquesta subxarxa allotjar√† la inst√†ncia EC2 que far√† de pont segur d'acc√©s (mitjan√ßant t√∫nel SSH) per a la gesti√≥ de tots els recursos privats. *(10.0.2.0/24)*.

- **AMSA-Private01**: Subxarxa privada per a les inst√†ncies de WordPress a la zona de disponibilitat **us-east-1a**. *(10.0.3.0/24)*.

- **AMSA-Private02**: Subxarxa privada per a les inst√†ncies de WordPress a la zona de disponibilitat **us-east-1b**. *(10.0.4.0/24)*

- **AMSA-Data**: Subxarxa privada per a dades a la zona de disponibilitat **us-east-1c**. *(10.0.5.0/24)*

## Taules d'Enrutament i Associacions

Per gestionar les rutes del tr√†fic i determinar com es distribueix entre les subxarxes, crearem taules de rutes i les associem a les subxarxes corresponents. 

### Configuraci√≥ del Gateway d'Internet

Utilitzeum un Gateway d'Internet (IGW) per permetre que les subxarxes p√∫bliques (Front-01 i Front-02) tinguin acc√©s a Internet. Crearem el IGW i l'associarem a la nostra VPC.

- **Creaci√≥ del Gateway d'Internet**:

![Gateway d'Internet per a la VPC](../../figs/laboratories/03-aws-wp/wordpress/ig.png)

- **Associaci√≥ del Gateway d'Internet amb la VPC**:

![Associaci√≥ del Gateway d'Internet amb la VPC](../../figs/laboratories/03-aws-wp/wordpress/attachIG.png)


![Associaci√≥ del Gateway d'Internet amb la VPC](../../figs/laboratories/03-aws-wp/wordpress/attachIG2.png)

- **Taula de rutes per a la subxarxa AMSA-DMZ-01**: La taula de rutes defineix com es dirigeix el tr√†fic dins de la VPC i cap a l'exterior. Crearem una taula de rutes espec√≠fica per a la subxarxa **AMSA-DMZ-01**.

    ![Taula de rutes per a la subxarxa AMSA-DMZ-RT](../../figs/laboratories/03-aws-wp/wordpress/AMSA-DMZ-RT.png)

  - **Associaci√≥ de la taula de rutes amb la subxarxa AMSA-DMZ-01**: Per fer-ho, navegarem a la consola de VPC d'AWS, seleccionarem la subxarxa **AMSA-DMZ-01** anireu a la secci√≥ *Subnet Associations* i clicareu a *Edit subnet associations*. A continuaci√≥, seleccionarem la taula de rutes **AMSA-DMZ01-RouteTable** i clicarem a *Save*.

    ![Associant la taula de rutes amb la subxarxa](../../figs/laboratories/03-aws-wp/wordpress/AMSA-DMZ-Subnet-Association.png)

    - **Permetem el tr√†fic de sortida a Internet**: Per fer-ho, navegarem a la consola de VPC d'AWS, seleccionarem la subxarxa **AMSA-DMZ-01** anireu a la secci√≥ *Routes* i clicareu a *Edit routes*. A continuaci√≥, **Add route** i editareu (Destination: 0.0.0.0/0; Target:Seleccionar el **AMSA-IG**).

      ![Permetem el tr√†fic amb l'exterior a trav√©s del IG](../../figs/laboratories/03-aws-wp/wordpress/AMSA-Routes-DMZ.png)

- Realitzarem el mateix proc√©s per a la subxarxa **AMSA-DMZ-02**. Creaci√≥ de la **AMSA-DMZ02-RouteTable** i l'associaci√≥ amb la subxarxa i crearem la ruta al **AMSA-IG**.

- **Taula de rutes per a la subxarxa AMSA-Private01 i AMSA-Private02**: Aquestes xarxes han de poder accedir a Internet. Per√≤ no volem que internet tingui acc√©s a les seves EC2. Per tant, necessitem crear un NAT Gateway. I despr√©s associar-lo a la subxarxa.

    - **Creaci√≥ del NAT Gateway**: Per crear un NAT Gateway, necessitem una IP el√†stica (Elastic IP). Per tant, primer crearem una IP el√†stica i despr√©s la utilitzarem per crear el NAT Gateway. L'anomeneu **AMSA-NAT-EIP**.
  
        ![Creaci√≥ de la IP el√†stica](../../figs/laboratories/03-aws-wp/wordpress/ElasticIP-NAT.png)

        ![Actualitzar el nom de la IP el√†stica](../../figs/laboratories/03-aws-wp/wordpress/ElasticIp-Nat2.png)

    - **Creaci√≥ del NAT Gateway**: Un cop tenim la IP el√†stica, podem crear el NAT Gateway. L'anomeneu **AMSA-NG** i l'associeu a la subxarxa **AMSA-DMZ**. 

        ![Creaci√≥ del NAT Gateway](../../figs/laboratories/03-aws-wp/wordpress/nat-gw-create.png)

    - Crearem la taula de rutes (*AMSA-Private01-RT*) per a la subxarxa **AMSA-Private01** i l'associarem a la subxarxa. Aquesta taula de rutes permetr√† que les inst√†ncies dins d'aquesta subxarxa accedeixin a Internet a trav√©s del NAT Gateway.

        ![Taula de rutes per a la subxarxa AMSA-Private01](../../figs/laboratories/03-aws-wp/wordpress/AMSA-Private01-RT.png)

      - **Associaci√≥ de la taula de rutes amb la subxarxa AMSA-Private01**: Per fer-ho, navegarem a la consola de VPC d'AWS, seleccionarem la subxarxa **AMSA-Private01** anireu a la secci√≥ *Subnet Associations* i clicareu a *Edit subnet associations*. A continuaci√≥, seleccionarem la taula de rutes **AMSA-Private01-RT** i clicarem a *Save*.

        ![Associant la taula de rutes amb la subxarxa](../../figs/laboratories/03-aws-wp/wordpress/AMSA-Private01-Subnet-Association.png)

      - **Permetem el tr√†fic de sortida a Internet**: Per fer-ho, navegarem a la consola de VPC d'AWS, seleccionarem la subxarxa **AMSA-Private01** anireu a la secci√≥ *Routes* i clicareu a *Edit routes*. A continuaci√≥, **Add route** i editareu (Destination: 0.0.0.0/0; Target:Seleccionar el **AMSA-NG**).

        ![Permetem el tr√†fic amb l'exterior a trav√©s del NAT Gateway](../../figs/laboratories/03-aws-wp/wordpress/AMSA-Routes-Private01.png)

    - Repetirem el mateix proc√©s per a la subxarxa **AMSA-Private02**. Creaci√≥ de la **AMSA-Private02-RT** i l'associaci√≥ amb la subxarxa i crearem la ruta al **AMSA-NG**.


- **Taula de rutes per a AMSA-Data**: La subxarxa **AMSA-Data** no requereix acc√©s directe a Internet. Anomenarem **AMSA-Data-RT**. Nom√©s necessita rutes locals per comunicar-se amb altres subxarxes dins de la VPC. Per a aix√≤, crearem una taula de rutes i l'associarem a **AMSA-Data**, per√≤ sense definir cap ruta.

## Grups de Seguretat

Els grups de seguretat (Security Groups) s√≥n una eina per controlar el tr√†fic de xarxa de les inst√†ncies i altres recursos d‚ÄôAWS, actuant com un tallafocs virtual. Permeten definir regles que especifiquen quines connexions estan permeses tant d'entrada (inbound) com de sortida (outbound).

- **Trafic inbound**: Permet decidir quins tipus de connexions entrants (cap al recurs) s√≥n permeses.
- **Trafic outbound**: Controla quines connexions sortints (des del recurs cap a altres destinacions) estan autoritzades.
  
### Grup de Seguretat per a les inst√†ncies EC2

- **Connexions entrants (inbound)** per als serveis web HTTP (port 80) i HTTPS (port 443), accessibles des de qualsevol origen.
- **Connexions SSH (port 22)** per a administraci√≥ remota, tamb√© accessibles des de qualsevol origen (inicialment, per√≤ m√©s endavant es restringiran).
- Totes les connexions sortints (**outbound**), que per defecte estan permeses a AWS, cosa que permet a les inst√†ncies EC2 comunicar-se amb altres recursos com ara RDS.

Per fer-ho, navegarem a la consola de VPC d'AWS, seleccionarem la secci√≥ *Security Groups* i clicarem a *Create security group*. A continuaci√≥, omplirem els camps amb la informaci√≥ necess√†ria i clicarem a *Create security group*. El podeu anomenar **AMSA-WP-SG**.

![Grup de Seguretat per a les inst√†ncies EC2](../../figs/laboratories/03-aws-wp/wordpress/AMSA-WP-SG.png)

:::{.callout-note title="Nota sobre la seguretat üîê"}
En aquest moment, estem permetent tot el tr√†fic de xarxa per als serveis web i SSH. Quan ho tinguem tot configurat, restringirem aquest acc√©s √∫nicament al trafic entrant provinent del balancejador de c√†rrega pels serveis web i a la nostra xarxa interna per a SSH.
:::

### Grup de Seguretat per a la base de dades RDS

- **Connexions inbound**: Nom√©s permetr√† tr√†fic al port 3306 (MySQL) i exclusivament des de les inst√†ncies EC2 que pertanyin al grup de seguretat **AMSA-WP-SG**.
- **Connexions outbound**: Per defecte, AWS permetr√† totes les connexions sortints, cosa que garanteix que la base de dades pugui comunicar-se amb altres recursos si √©s necessari.

Per fer-ho, navegarem a la consola de VPC d'AWS, seleccionarem la secci√≥ *Security Groups* i clicarem a *Create security group*. A continuaci√≥, omplirem els camps amb la informaci√≥ necess√†ria i clicarem a *Create security group*.

![Grup de Seguretat per a la base de dades RDS](../../figs/laboratories/03-aws-wp/wordpress/AMSA-DB-SG.png)

### Resum

| Grup de Seguretat | Inbound | Outbound |
|-------------------|---------|----------|
| AMSA-WP-SG       | HTTP (80) i HTTPS (443) des de 0.0.0.0/0; SSH (22) des de 0.0.0.0/0| Totes permeses |
| AMSA-DB-SG        | MySQL (3306) des de AMSA-Web-SG | Totes permeses |


## Creaci√≥ de la Base de Dades RDS

La base de dades ja la vam configurar en el laboratori anterior [Desplegament d'una aplicaci√≥ web amb AWS](../01-foundations/02-aws-wordpress.qmd). La √∫nica difer√®ncia √©s que ara la base de dades es troba en una subxarxa privada i nom√©s √©s accessible des de les inst√†ncies EC2 que pertanyen al grup de seguretat **AMSA-Web-SG**.

- **Compute resources**: Don't connect to an EC2 compute resource
- **VPC**: AMSA-VPC
- **Subnet Group**: Create new DB Subnet Group
- **Public accessibility**: No
- **VPC security group**: AMSA-DB-SG
- **Availability Zone**: us-east-1d


## Creaci√≥ de les inst√†ncies EC2

Les inst√†ncies EC2 que allotjaran WordPress es desplegaran en les subxarxes privades, recordeu que vam configurar ansible en el laboratori anterior [Desplegament d'una aplicaci√≥ web amb AWS](../01-foundations/02-aws-wordpress.qmd). AWS ens permet crear plantilles d'inst√†ncies (**Launch Templates**) que faciliten la creaci√≥ d'inst√†ncies amb una configuraci√≥ predefinida. Per tant, crearem una plantilla d'inst√†ncia que inclogui la configuraci√≥ necess√†ria per a les nostres inst√†ncies EC2 de WordPress, enlloc d'utiltizar el m√®tode amb ansible que vam utilitzar en el laboratori anterior.

# Configuraci√≥ del Servidor Web amb WordPress

1. Creareu una instancia EC2 amb Amazon Linux, seleccionant la VPC **AMSA-VPC** i la subxarxa **AMSA-DMZ**. Assegureu-vos que l'inst√†ncia utilitzi el grup de seguretat **AMSA-WP-SG**. La podeu anomenar **AMSA-DB-Config**. Seleccionar *assignar ip p√∫blica*. Aquesta inst√†ncia nom√©s la farem servir per inicialitzar la base de dades i despr√©s la podrem eliminar.

2. Un cop configurada la inst√†ncia, connecteu-vos-hi mitjan√ßant SSH utilitzant la clau privada corresponent a la clau p√∫blica que vau associar a la inst√†ncia durant la seva creaci√≥. I realitzeu la configuraci√≥ de la base de dades MySQL per a WordPress.

3. Anem a crear una plantilla de llan√ßament (**Launch Template**) per a les inst√†ncies EC2 que allotjaran WordPress. Aquesta plantilla inclour√† la configuraci√≥ necess√†ria per a les inst√†ncies, incloent-hi el script d'instal¬∑laci√≥ i configuraci√≥ de WordPress.

   - Nom de la plantilla: **AMSA-WP-Template**
   - AMI: Amazon Linux 2023 (64-bit x86)
   - Inst√†ncia Type: t2.micro
   - Key Pair: AMSA-KEY
   - Subxarxa: No seleccionar cap subxarxa (es seleccionar√† din√†micament)
   - Grup de Seguretat: *AMSA-WP-SG*
   - Advanced Details: Afegiu el seg√ºent script a la secci√≥ de UserData.

:::{.callout-note title="Script d'instal¬∑laci√≥ i configuraci√≥ de WordPress üìù"}

Modifiqueu les dades de connexi√≥ a la base de dades segons les vostres dades.

```bash
#!/bin/bash
# sudo bash install_wp.sh

# Ajusteu les dades seg√ºents segons les vostres dades
DB_NAME="" 
DB_USER=""
DB_USER_PASSWORD=""
DB_HOST="" 

if [ "$(id -u)" -ne 0 ]; then
    echo "Please run this script with sudo or as root."
    exit 1
fi

dnf install -y wget php-mysqlnd httpd php-fpm php-mysqli php-json php php-devel php-gd expect

cd /tmp
wget https://wordpress.org/latest.tar.gz
tar -xzf latest.tar.gz

# Configure WordPress
cp wordpress/wp-config-sample.php wordpress/wp-config.php
sed -i "s/database_name_here/$DB_NAME/g" wordpress/wp-config.php
sed -i "s/username_here/$DB_USER/g" wordpress/wp-config.php
sed -i "s/password_here/$DB_USER_PASSWORD/g" wordpress/wp-config.php
sed -i "s/localhost/$DB_HOST/g" wordpress/wp-config.php

sudo cp -r wordpress/* /var/www/html/

sudo sed -i 's/AllowOverride None/AllowOverride All/g' /etc/httpd/conf/httpd.conf

sudo chown -R apache:apache /var/www
sudo chmod 2775 /var/www

sudo systemctl restart httpd
```
:::

Un cop creada la plantilla de llan√ßament, podeu utilitzar-la per crear inst√†ncies EC2 amb WordPress ja configurat i preparades per connectar amb la vostra base de dades RDS. Aneu a **EC2** i seleccioneu **Launch Instance**. A continuaci√≥, seleccioneu la plantilla de llan√ßament **AMSA-WP-Template** i configureu la resta de par√†metres segons les vostres necessitats.

- Nombre d'inst√†ncies: 2
- Subxarxa: Seleccioneu la subxarxa **AMSA-Private01** per a la primera inst√†ncia i **AMSA-Private02** per a la segona inst√†ncia. Les podeu anomenar **AMSA-WP-01** i **AMSA-WP-02** respectivament.


:::{.callout-important title="Nota sobre les inst√†ncies EC2 üñ•Ô∏è"}
Aquestes inst√†ncies no tindran IP p√∫blica, ja que nom√©s seran accessibles a trav√©s del balancejador de c√†rrega que configurarem m√©s endavant. Ara mateix no podreu accedir-hi directament ni per SSH ni per HTTP.
:::



## Configuraci√≥ del Balancejador de C√†rrega

En aquest punt, crearem un balancejador de c√†rrega per a les nostres inst√†ncies EC2. Aquest balancejador de c√†rrega ser√† responsable de distribuir uniformement el tr√†fic entre les inst√†ncies EC2 que allotgen WordPress.

Existeixen 3 tipus de balancejadors de c√†rrega a AWS: **Application Load Balancer (ALB)**, **Network Load Balancer (NLB)** i **Gateway Load Balancer (GWLB)**. En aquest cas, utilitzarem un **Application Load Balancer (ALB)**, ja que √©s el recomanat per a aplicacions web que utiltizen HTTP i HTTPS.

Navegueu a la consola de AWS i seleccioneu el servei **EC2**. A la barra lateral, seleccioneu **Load Balancers** i despr√©s **Create Load Balancer**. Seleccioneu **Application Load Balancer** i feu clic a **Create**.

- **Nom del balancejador de c√†rrega**: AMSA-ALB
- **Scheme**: Internet-facing
- **IP Address Type**: IPv4

![Configuraci√≥ del balancejador de c√†rrega](../../figs/laboratories/03-aws-wp/wordpress/lb-01.png)

- **VPC**: AMSA-VPC
- **Availability Zones**: Seleccionar les zones de disponibilitat on tenim la subxarxa p√∫blica **AMSA-DMZ-01** (us-east-1a) i les **AMSA-DMZ-02** (us-east-1b).

- **Grups de Seguretat**: Nou grup de seguretat (**AMSA-ALB-SG**), aquest grup de seguretat permetr√† el tr√†fic d'entrada per als ports 80 (HTTP) i 443 (HTTPS) des de qualsevol origen per√≤ restringir√† el tr√†fic de sortida a les inst√†ncies EC2 (grup de seguretat **AMSA-WP-SG**).

    ![Grup de Seguretat per al balancejador de c√†rrega](../../figs/laboratories/03-aws-wp/wordpress/AMSA-ALB-SG.png)

    ![Configuraci√≥ del balancejador de c√†rrega](../../figs/laboratories/03-aws-wp/wordpress/lb-03.png)

- **Listeners**: Crearem un listener per al port 80 (HTTP), que redirigir√† el tr√†fic al port 80 de les inst√†ncies EC2. Al port 443 (HTTPS) de moment no configurarem cap redirecci√≥. Per fer-ho, primer haureu de crear un **Target Group**. Aquest grup es necessari per indicar al balancejador de c√†rrega on enviar el tr√†fic.

  - *Target Group*:
    - **Target Type**: Instances
    - **Nom**: AMSA-WP-TG
    - **Protocol**: HTTP
    - **Port**: 80
    - **VPC**: AMSA-VPC
    - **Health checks**: HTTP, ruta **/**


    ![Configuraci√≥ del target group](../../figs/laboratories/03-aws-wp/wordpress/tg-03.png)

:::{.callout-note title="Health Check üéØ"}
El balancejador de c√†rrega comprova ltg-04a salut de les inst√†ncies EC2 a trav√©s del port 80 i la ruta **/**. Aix√≤ significa que el balancejador de c√†rrega enviar√† tr√†fic a les inst√†ncies EC2 que responguin correctament a les peticions HTTP a la ruta **/**. Com que les nostres inst√†ncies EC2 tenen WordPress instal¬∑lat, aquestes inst√†ncies respondran correctament a les peticions HTTP a la ruta **/**. *Podem deixar la configuraci√≥ per defecte*.
:::

- Seleccionarem les dos inst√†ncies EC2 que allotgen WordPress (AMSA-WP-01 i AMSA-WP-02) i les afegirem al target group. Utilitzant el bot√≥ **Include as pending below** i despr√©s **Add to registered**.

    ![Configuraci√≥ del target group](../../figs/laboratories/03-aws-wp/wordpress/tg-04.png)


- Un cop creat el target group, el seleccionarem com a target del listener del balancejador de c√†rrega.

    ![Configuraci√≥ del balancejador de c√†rrega](../../figs/laboratories/03-aws-wp/wordpress/lb-05.png)

- Un cop creat el balancejador de c√†rrega, heu d'esperar uns minuts fins que el seu estat passi de **Provisioning** a **Active**. Un cop l'estat sigui **Active**, podeu accedir al balancejador de c√†rrega a trav√©s de la seva adre√ßa DNS.

![Balancejador de c√†rrega actiu](../../figs/laboratories/03-aws-wp/wordpress/lb-active.png)

- Ara ja podem accedir al balancejador de c√†rrega a trav√©s de la seva adre√ßa DNS i veure la p√†gina d'instal¬∑laci√≥ de WordPress:

![Instal¬∑laci√≥ de WordPress a trav√©s del balancejador de c√†rrega](../../figs/laboratories/03-aws-wp/wordpress/wp-config-01.png)

Procedirem a instal¬∑lar WordPress a trav√©s del balancejador de c√†rrega. Seguiu els passos de la instal¬∑laci√≥ i configureu l'usuari administrador i la contrasenya. Ara ja teniu el servidor web configurat amb WordPress i el balancejador de c√†rrega per distribuir el tr√†fic entre les inst√†ncies EC2.

## Configuraci√≥ VPN

### EC2 per desplegar el servidor VPN

Per desplegar el servidor VPN, crearem una nova inst√†ncia EC2 que actuar√† com a servidor VPN. Aquesta inst√†ncia EC2 haur√† d'estar en una subxarxa p√∫blica connectada a interent. Anomenarem aquesta inst√†ncia **AMSA-VPN** i la situarem a la subxarxa p√∫blica **AMSA-DMZ**. Aquesta inst√†ncia EC2 utilitzar√† el grup de seguretat **AMSA-VPN-SG** que permetr√† el tr√†fic necessari per al funcionament del servidor VPN.

1. Navegueu a la consola de AWS i seleccioneu el servei **EC2**. A la barra lateral, seleccioneu **Instances** i despr√©s **Launch Instances**.
2. Seleccioneu la imatge **Ubuntu Server 22.04 LTS**.
3. Seleccioneu la inst√†ncia **t2.micro**.
4. Configureu la inst√†ncia:
    - **Network**: AMSA-VPC
    - **Subnet**: Front-01
    - **Auto-assign Public IP**: Enable

    ![Configuraci√≥ de la inst√†ncia EC2 per al servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/AMSA-VPN.png)

5. Configureu el grup de seguretat: **AMSA-VPN-SG**.

    Si reviseu la documentaci√≥ d'instal¬∑laci√≥ del servidor OpenVPN: [OpenVPN Access Server System Administrator Guide ](https://openvpn.net/images/pdf/OpenVPN_Access_Server_Sysadmin_Guide_Rev.pdf). Veure que necessitem els seg√ºents ports oberts: **TCP 443, TCP 943, UDP 1194**.

    ![Configuraci√≥ del grup de seguretat per al servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/AMSA-SG-VPN.png)

6. Connecteu-vos a la inst√†ncia EC2 a trav√©s de la consola online de AWS o amb una connexi√≥ SSH i executeu la seg√ºent comanda per instal¬∑lar el servidor OpenVPN:

    ```bash
    sudo apt update -y
    sudo apt install ca-certificates gnupg wget net-tools -y
    sudo wget https://as-repository.openvpn.net/as-repo-public.asc -qO /etc/apt/trusted.gpg.d/as-repo-public.asc
    sudo echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/as-repo-public.asc] http://as-repository.openvpn.net/as/debian jammy main" | sudo tee /etc/apt/sources.list.d/openvpn-as-repo.list
    sudo apt update && sudo apt install openvpn-as -y
    ```

    ![Instal¬∑laci√≥ del servidor OpenVPN](../../figs/laboratories/03-aws-wp/wordpress/VPN-config.png)

7. Amb aquestes credencials, podreu accedir a la interf√≠cie web del servidor OpenVPN a trav√©s del vostre navegador web. Navegueu a la IP p√∫blica de la inst√†ncia EC2 (en el meu cas https://44.199.196.242:943/admin), com no tenim el certificat SSL configurat, ens sortir√† un missatge d'advert√®ncia, ignoreu-lo i continueu. Inicieu sessi√≥ amb les credencials que heu configurat anteriorment.

    > Nota: Si heu perdut les credencials de l'usuari `openvpn`, les podeu recuperar consultat el fitxer de logs del servidor OpenVPN. Per exemple, podeu consultar el fitxer de logs amb la seg√ºent comanda:
    >
    > ```bash
    > sudo less /usr/local/openvpn_as/init.log 
    > ```

    ![Interf√≠cie web del servidor OpenVPN](../../figs/laboratories/03-aws-wp/wordpress/VPN-admin-login.png)

    - Accepteu els termes de llic√®ncia.
  
    ![Acceptaci√≥ dels termes de llic√®ncia](../../figs/laboratories/03-aws-wp/wordpress/VPN-accept-terms.png)

    - Aneu a **VPN Server/Network Settings** i configureu el **Hostname or IP Address** amb la IP p√∫blica de la inst√†ncia EC2 on teniu el servidor OpenVPN. Un cop fet, clicareu a **Save**.

        ![Configuraci√≥ de la IP p√∫blica del servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/VPN-admin-01.png)


    - Aneu a **Access Controls/Internet Access and DNS** i seleccioneu l'opci√≥ **Split Tunnel** per evitar que tot el tr√†fic del client sigui redirigit a trav√©s de la VPN. √önicament el tr√†fic dirigit a les subxarxes de la VPC ser√† redirigit a trav√©s de la VPN.

        ![Configuraci√≥ de Split Tunnel](../../figs/laboratories/03-aws-wp/wordpress/VPN-Split-Tunnel.png)

    - Aneu a **Access Controls/Global Access Rules** i afegiu una regla per permetre el tr√†fic de la VPN a les subxarxes de la VPC:
  
        ![Configuraci√≥ de les regles d'acc√©s global](../../figs/laboratories/03-aws-wp/wordpress/VPN-Global-Acces.png)

    - Aneu a **User** i creu-vos un usuari i una contrasenya per connectar-vos al servidor VPN.

        ![Creaci√≥ d'un usuari per al servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/VPN-User.png)

    - Un cop tinguem el fitxer de configuraci√≥, ja podeu fer un **Restart** del servei OpenVPN per aplicar tots els canvis. Torneu a accedir a la interf√≠cie web del servidor OpenVPN.

    - Aneu a **User/user/Connection Profiles** i creeu un perfil de connexi√≥ per defecte. Un cop creat us baixar√† un fitxer de configuraci√≥ que despr√©s utilitzarem per connectar-nos al servidor VPN.

        ![Desc√†rrega del fitxer de configuraci√≥ del client VPN](../../figs/laboratories/03-aws-wp/wordpress/VPN-Connection-Profile.png)

    

    - Installeu l'aplicaci√≥ [OpenVPN Connect](https://openvpn.net/client/) al vostre ordinador. Aquesta aplicaci√≥ √©s el client VPN que utilitzarem per connectar-nos al servidor VPN.

    - Un cop instal¬∑lat, obriu l'aplicaci√≥ i importeu el fitxer de configuraci√≥ que heu descarregat anteriorment.

        
8.  Un cop tot configurat, actualitzarem el grup de seguretat de les inst√†ncies EC2 per permetre el tr√†fic al port 22 √∫nicament provinent del servidor VPN. Aix√≤ significa que les inst√†ncies EC2 nom√©s acceptaran tr√†fic SSH del servidor VPN i no de qualsevol altre origen.

    ![Configuraci√≥ tr√†fic SSH a Ec2 del servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/ec2-ssh-only-vpn.png)

En aquest punt, ja no podreu accedir a les inst√†ncies EC2 on teniu el servei de WordPress a trav√©s de SSH, ja que el tr√†fic SSH nom√©s es permet des del servidor VPN. Per accedir a les inst√†ncies EC2, primer heu de connectar-vos al servidor VPN i despr√©s connectar-vos a les inst√†ncies EC2. Per fer-ho:

- Importeu el fitxer de configuraci√≥ del client OpenVPN Connect a l'aplicaci√≥ i connecteu-vos al servidor VPN.
  
    ![Connexi√≥ al servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/vpn-connection-01.png)

    > **TroubleShooting**: Si en el fitxer de configuraci√≥ veieu (**Server Hostname**) una ip del rang 10.0.X.X, aix√≤ vol dir que la VPN no s'ha configurat correctament. Assegureu-vos de reiniciar el servidor i tornar a descarregar el fitxer de configuraci√≥ del client, ha de tenir la ip p√∫blica del servidor VPN.

- Utilitzeu la mateixa contrasenya del usuari `openvpn` per connectar-vos al servidor VPN.

    ![Connexi√≥ al servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/vpn-connection-02.png)

- Si tot ha anat b√©, veureu que esteu connectats al servidor VPN.

    ![Connexi√≥ al servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/vpn-connection-03.png)
  
Finalment, connecteu-vos a les inst√†ncies EC2:

![Acc√©s a les inst√†ncies EC2 a trav√©s del servidor VPN](../../figs/laboratories/03-aws-wp/wordpress/VPN-SSH.png)

> **Consideracions importants**: El servidor VPN ens permet accedir a les inst√†ncies EC2 a trav√©s de SSH, per√≤ a partir de l'adre√ßa interna (10.0.X.X) de la inst√†ncia EC2. No podrem accedir a les inst√†ncies EC2 a trav√©s de la seva adre√ßa p√∫blica ja que hem configurat la VPN per accedir a les subxarxes de la VPC.


## Test final

Podeu utilitzar `curl` o recarregar la p√†gina web per veure com el balancejador de c√†rrega distribueix el tr√†fic entre les inst√†ncies EC2.

```bash
curl http://AMSA-ALB-XXXXXXX.us-west-2.elb.amazonaws.com
```

Per observar-ho podeu accedir als logs de les inst√†ncies EC2 i veure com el tr√†fic es distribueix entre les dues inst√†ncies.

```bash
sudo tail -f /var/log/httpd/access_log
```


## Neteja els recursos creats

Un cop finalitzat podeu eliminar totes les inst√†ncies EC2 i la base de dades RDS per evitar c√†rrecs innecessaris al vostre compte d'AWS.

## Exercics Adicionals

1. Com millorar√≠eu els grups de seguretat, quins canvis far√≠eu?
2. Qu√® caldria fer per connectar un client MySQL des de casa a la base de dades RDS? Expliqueu els passos.



